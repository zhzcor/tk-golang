// Code generated by entc, DO NOT EDIT.

package tkexampaper

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tkexampaper type in the database.
	Label = "tk_exam_paper"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldExamQuestionType holds the string denoting the exam_question_type field in the database.
	FieldExamQuestionType = "exam_question_type"
	// FieldExamType holds the string denoting the exam_type field in the database.
	FieldExamType = "exam_type"
	// FieldDifficulty holds the string denoting the difficulty field in the database.
	FieldDifficulty = "difficulty"
	// FieldQuestionCount holds the string denoting the question_count field in the database.
	FieldQuestionCount = "question_count"
	// FieldAnsweredUserCount holds the string denoting the answered_user_count field in the database.
	FieldAnsweredUserCount = "answered_user_count"
	// FieldScore holds the string denoting the score field in the database.
	FieldScore = "score"
	// FieldPassScore holds the string denoting the pass_score field in the database.
	FieldPassScore = "pass_score"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldDurationType holds the string denoting the duration_type field in the database.
	FieldDurationType = "duration_type"
	// FieldStartAt holds the string denoting the start_at field in the database.
	FieldStartAt = "start_at"
	// FieldEndAt holds the string denoting the end_at field in the database.
	FieldEndAt = "end_at"
	// FieldEnableStatus holds the string denoting the enable_status field in the database.
	FieldEnableStatus = "enable_status"
	// FieldCreatedAdminID holds the string denoting the created_admin_id field in the database.
	FieldCreatedAdminID = "created_admin_id"
	// FieldQuestionBankID holds the string denoting the question_bank_id field in the database.
	FieldQuestionBankID = "question_bank_id"
	// EdgeQuestionBank holds the string denoting the question_bank edge name in mutations.
	EdgeQuestionBank = "question_bank"
	// EdgeAdmin holds the string denoting the admin edge name in mutations.
	EdgeAdmin = "admin"
	// EdgeExamPartitions holds the string denoting the exam_partitions edge name in mutations.
	EdgeExamPartitions = "exam_partitions"
	// EdgeMakeUserQuestionExam holds the string denoting the make_user_question_exam edge name in mutations.
	EdgeMakeUserQuestionExam = "make_user_question_exam"
	// EdgeUserExamPapers holds the string denoting the user_exam_papers edge name in mutations.
	EdgeUserExamPapers = "user_exam_papers"
	// EdgeCourseExamPapers holds the string denoting the course_exam_papers edge name in mutations.
	EdgeCourseExamPapers = "course_exam_papers"
	// EdgeExamPaperRecords holds the string denoting the exam_paper_records edge name in mutations.
	EdgeExamPaperRecords = "exam_paper_records"
	// EdgeUserRandomExam holds the string denoting the user_random_exam edge name in mutations.
	EdgeUserRandomExam = "user_random_exam"
	// Table holds the table name of the tkexampaper in the database.
	Table = "tk_exam_papers"
	// QuestionBankTable is the table the holds the question_bank relation/edge.
	QuestionBankTable = "tk_exam_papers"
	// QuestionBankInverseTable is the table name for the TkQuestionBank entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionbank" package.
	QuestionBankInverseTable = "tk_question_banks"
	// QuestionBankColumn is the table column denoting the question_bank relation/edge.
	QuestionBankColumn = "question_bank_id"
	// AdminTable is the table the holds the admin relation/edge.
	AdminTable = "tk_exam_papers"
	// AdminInverseTable is the table name for the Admin entity.
	// It exists in this package in order to avoid circular dependency with the "admin" package.
	AdminInverseTable = "admins"
	// AdminColumn is the table column denoting the admin relation/edge.
	AdminColumn = "created_admin_id"
	// ExamPartitionsTable is the table the holds the exam_partitions relation/edge.
	ExamPartitionsTable = "tk_exam_paper_partitions"
	// ExamPartitionsInverseTable is the table name for the TkExamPaperPartition entity.
	// It exists in this package in order to avoid circular dependency with the "tkexampaperpartition" package.
	ExamPartitionsInverseTable = "tk_exam_paper_partitions"
	// ExamPartitionsColumn is the table column denoting the exam_partitions relation/edge.
	ExamPartitionsColumn = "exam_paper_id"
	// MakeUserQuestionExamTable is the table the holds the make_user_question_exam relation/edge.
	MakeUserQuestionExamTable = "make_user_question_records"
	// MakeUserQuestionExamInverseTable is the table name for the MakeUserQuestionRecord entity.
	// It exists in this package in order to avoid circular dependency with the "makeuserquestionrecord" package.
	MakeUserQuestionExamInverseTable = "make_user_question_records"
	// MakeUserQuestionExamColumn is the table column denoting the make_user_question_exam relation/edge.
	MakeUserQuestionExamColumn = "exam_id"
	// UserExamPapersTable is the table the holds the user_exam_papers relation/edge.
	UserExamPapersTable = "tk_user_exam_score_records"
	// UserExamPapersInverseTable is the table name for the TkUserExamScoreRecord entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserexamscorerecord" package.
	UserExamPapersInverseTable = "tk_user_exam_score_records"
	// UserExamPapersColumn is the table column denoting the user_exam_papers relation/edge.
	UserExamPapersColumn = "exam_paper_id"
	// CourseExamPapersTable is the table the holds the course_exam_papers relation/edge.
	CourseExamPapersTable = "kc_small_category_exam_papers"
	// CourseExamPapersInverseTable is the table name for the KcSmallCategoryExamPaper entity.
	// It exists in this package in order to avoid circular dependency with the "kcsmallcategoryexampaper" package.
	CourseExamPapersInverseTable = "kc_small_category_exam_papers"
	// CourseExamPapersColumn is the table column denoting the course_exam_papers relation/edge.
	CourseExamPapersColumn = "exam_paper_id"
	// ExamPaperRecordsTable is the table the holds the exam_paper_records relation/edge.
	ExamPaperRecordsTable = "tk_user_question_records"
	// ExamPaperRecordsInverseTable is the table name for the TkUserQuestionRecord entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserquestionrecord" package.
	ExamPaperRecordsInverseTable = "tk_user_question_records"
	// ExamPaperRecordsColumn is the table column denoting the exam_paper_records relation/edge.
	ExamPaperRecordsColumn = "exam_paper_id"
	// UserRandomExamTable is the table the holds the user_random_exam relation/edge.
	UserRandomExamTable = "tk_user_random_exam_recodes"
	// UserRandomExamInverseTable is the table name for the TkUserRandomExamRecode entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserrandomexamrecode" package.
	UserRandomExamInverseTable = "tk_user_random_exam_recodes"
	// UserRandomExamColumn is the table column denoting the user_random_exam relation/edge.
	UserRandomExamColumn = "exam_id"
)

// Columns holds all SQL columns for tkexampaper fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldDesc,
	FieldExamQuestionType,
	FieldExamType,
	FieldDifficulty,
	FieldQuestionCount,
	FieldAnsweredUserCount,
	FieldScore,
	FieldPassScore,
	FieldDuration,
	FieldDurationType,
	FieldStartAt,
	FieldEndAt,
	FieldEnableStatus,
	FieldCreatedAdminID,
	FieldQuestionBankID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DefaultExamQuestionType holds the default value on creation for the "exam_question_type" field.
	DefaultExamQuestionType uint8
	// DefaultExamType holds the default value on creation for the "exam_type" field.
	DefaultExamType uint8
	// DefaultDifficulty holds the default value on creation for the "difficulty" field.
	DefaultDifficulty uint8
	// DefaultQuestionCount holds the default value on creation for the "question_count" field.
	DefaultQuestionCount int
	// DefaultAnsweredUserCount holds the default value on creation for the "answered_user_count" field.
	DefaultAnsweredUserCount int
	// DefaultScore holds the default value on creation for the "score" field.
	DefaultScore int
	// DefaultPassScore holds the default value on creation for the "pass_score" field.
	DefaultPassScore int
	// DefaultDuration holds the default value on creation for the "duration" field.
	DefaultDuration int
	// DefaultDurationType holds the default value on creation for the "duration_type" field.
	DefaultDurationType int
	// DefaultEnableStatus holds the default value on creation for the "enable_status" field.
	DefaultEnableStatus uint8
)
