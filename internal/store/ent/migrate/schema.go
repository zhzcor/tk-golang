// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "sub_title", Type: field.TypeString, Default: ""},
		{Name: "cover_img_id", Type: field.TypeInt, Default: 0},
		{Name: "notice", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "place", Type: field.TypeString, Default: ""},
		{Name: "is_free", Type: field.TypeUint8, Default: 0},
		{Name: "is_publish", Type: field.TypeUint8, Default: 0},
		{Name: "amount", Type: field.TypeInt, Default: 0},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "apply_start_at", Type: field.TypeTime, Nullable: true},
		{Name: "apply_end_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_hot", Type: field.TypeUint8, Default: 0},
		{Name: "is_auto_publish", Type: field.TypeUint8, Default: 0},
		{Name: "apply_count", Type: field.TypeInt, Default: 0},
		{Name: "join_count", Type: field.TypeInt, Default: 0},
		{Name: "is_limit_join_count", Type: field.TypeUint8, Default: 0},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "sign_remark", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "activity_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:       "activities",
		Columns:    ActivitiesColumns,
		PrimaryKey: []*schema.Column{ActivitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activities_activity_types_activities",
				Columns:    []*schema.Column{ActivitiesColumns[25]},
				RefColumns: []*schema.Column{ActivityTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "activities_admins_activities",
				Columns:    []*schema.Column{ActivitiesColumns[26]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ActivityApplyInfosColumns holds the columns for the "activity_apply_infos" table.
	ActivityApplyInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "is_our_student", Type: field.TypeUint8, Default: 0},
		{Name: "activity_id", Type: field.TypeInt, Nullable: true},
	}
	// ActivityApplyInfosTable holds the schema information for the "activity_apply_infos" table.
	ActivityApplyInfosTable = &schema.Table{
		Name:       "activity_apply_infos",
		Columns:    ActivityApplyInfosColumns,
		PrimaryKey: []*schema.Column{ActivityApplyInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_apply_infos_activities_apply_activities",
				Columns:    []*schema.Column{ActivityApplyInfosColumns[9]},
				RefColumns: []*schema.Column{ActivitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ActivityTypesColumns holds the columns for the "activity_types" table.
	ActivityTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
	}
	// ActivityTypesTable holds the schema information for the "activity_types" table.
	ActivityTypesTable = &schema.Table{
		Name:        "activity_types",
		Columns:     ActivityTypesColumns,
		PrimaryKey:  []*schema.Column{ActivityTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "salt", Type: field.TypeString},
		{Name: "boss_admin_id", Type: field.TypeInt, Default: 0},
		{Name: "real_name", Type: field.TypeString, Default: ""},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "third_openid", Type: field.TypeString, Default: ""},
		{Name: "platform", Type: field.TypeUint8, Default: 0},
		{Name: "is_active", Type: field.TypeUint8, Default: 0},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "admin_avatar_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admins_attachments_admin_img_id",
				Columns:    []*schema.Column{AdminsColumns[16]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminLoginLogsColumns holds the columns for the "admin_login_logs" table.
	AdminLoginLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "ip", Type: field.TypeString, Default: ""},
		{Name: "city", Type: field.TypeString, Default: ""},
		{Name: "browser", Type: field.TypeString, Default: ""},
		{Name: "admin_id", Type: field.TypeInt, Nullable: true},
	}
	// AdminLoginLogsTable holds the schema information for the "admin_login_logs" table.
	AdminLoginLogsTable = &schema.Table{
		Name:       "admin_login_logs",
		Columns:    AdminLoginLogsColumns,
		PrimaryKey: []*schema.Column{AdminLoginLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_login_logs_admins_admin_login_logs",
				Columns:    []*schema.Column{AdminLoginLogsColumns[8]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminOperationLogsColumns holds the columns for the "admin_operation_logs" table.
	AdminOperationLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "ip", Type: field.TypeString, Default: ""},
		{Name: "record", Type: field.TypeString, Default: ""},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "admin_id", Type: field.TypeInt, Nullable: true},
	}
	// AdminOperationLogsTable holds the schema information for the "admin_operation_logs" table.
	AdminOperationLogsTable = &schema.Table{
		Name:       "admin_operation_logs",
		Columns:    AdminOperationLogsColumns,
		PrimaryKey: []*schema.Column{AdminOperationLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_operation_logs_admins_operation_admin_logs",
				Columns:    []*schema.Column{AdminOperationLogsColumns[8]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdvertisesColumns holds the columns for the "advertises" table.
	AdvertisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "position", Type: field.TypeUint8, Default: 1},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "click_count", Type: field.TypeInt, Default: 0},
		{Name: "ad_url", Type: field.TypeString, Default: ""},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
	}
	// AdvertisesTable holds the schema information for the "advertises" table.
	AdvertisesTable = &schema.Table{
		Name:       "advertises",
		Columns:    AdvertisesColumns,
		PrimaryKey: []*schema.Column{AdvertisesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "advertises_attachments_advertise",
				Columns:    []*schema.Column{AdvertisesColumns[14]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AppAgreementsColumns holds the columns for the "app_agreements" table.
	AppAgreementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// AppAgreementsTable holds the schema information for the "app_agreements" table.
	AppAgreementsTable = &schema.Table{
		Name:        "app_agreements",
		Columns:     AppAgreementsColumns,
		PrimaryKey:  []*schema.Column{AppAgreementsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AppVersionsColumns holds the columns for the "app_versions" table.
	AppVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "ip", Type: field.TypeUint16, Default: 0},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "sn", Type: field.TypeString, Default: ""},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "url", Type: field.TypeString, Default: ""},
		{Name: "phone_type", Type: field.TypeUint8, Default: 0},
		{Name: "is_force_update", Type: field.TypeUint8, Default: 2},
	}
	// AppVersionsTable holds the schema information for the "app_versions" table.
	AppVersionsTable = &schema.Table{
		Name:        "app_versions",
		Columns:     AppVersionsColumns,
		PrimaryKey:  []*schema.Column{AppVersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AttachmentsColumns holds the columns for the "attachments" table.
	AttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "filename", Type: field.TypeString, Default: ""},
		{Name: "file_size", Type: field.TypeUint32, Default: 0},
		{Name: "mime_type", Type: field.TypeString, Default: ""},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "admin_id", Type: field.TypeInt, Nullable: true},
	}
	// AttachmentsTable holds the schema information for the "attachments" table.
	AttachmentsTable = &schema.Table{
		Name:        "attachments",
		Columns:     AttachmentsColumns,
		PrimaryKey:  []*schema.Column{AttachmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CitiesColumns holds the columns for the "cities" table.
	CitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "code", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
	}
	// CitiesTable holds the schema information for the "cities" table.
	CitiesTable = &schema.Table{
		Name:        "cities",
		Columns:     CitiesColumns,
		PrimaryKey:  []*schema.Column{CitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CollectionsColumns holds the columns for the "collections" table.
	CollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_id", Type: field.TypeInt, Nullable: true},
		{Name: "sec_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_question_type", Type: field.TypeInt, Nullable: true},
		{Name: "value_id", Type: field.TypeInt, Nullable: true},
	}
	// CollectionsTable holds the schema information for the "collections" table.
	CollectionsTable = &schema.Table{
		Name:       "collections",
		Columns:    CollectionsColumns,
		PrimaryKey: []*schema.Column{CollectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "collections_tk_questions_collection_question",
				Columns:    []*schema.Column{CollectionsColumns[11]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "collection_user_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[6]},
			},
			{
				Name:    "collection_value_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[11]},
			},
			{
				Name:    "collection_sec_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[8]},
			},
			{
				Name:    "collection_exam_id",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[7]},
			},
			{
				Name:    "collection_exam_question_type",
				Unique:  false,
				Columns: []*schema.Column{CollectionsColumns[10]},
			},
		},
	}
	// GroupCardsColumns holds the columns for the "group_cards" table.
	GroupCardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "sub_title", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
	}
	// GroupCardsTable holds the schema information for the "group_cards" table.
	GroupCardsTable = &schema.Table{
		Name:       "group_cards",
		Columns:    GroupCardsColumns,
		PrimaryKey: []*schema.Column{GroupCardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_cards_attachments_group_card",
				Columns:    []*schema.Column{GroupCardsColumns[10]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HotSearchesColumns holds the columns for the "hot_searches" table.
	HotSearchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "search_count", Type: field.TypeInt, Default: 0},
	}
	// HotSearchesTable holds the schema information for the "hot_searches" table.
	HotSearchesTable = &schema.Table{
		Name:        "hot_searches",
		Columns:     HotSearchesColumns,
		PrimaryKey:  []*schema.Column{HotSearchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ImportTasksColumns holds the columns for the "import_tasks" table.
	ImportTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "import_name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "path", Type: field.TypeString, Default: ""},
		{Name: "total", Type: field.TypeInt, Default: 0},
		{Name: "created_admin_id", Type: field.TypeInt, Default: 0},
		{Name: "remark", Type: field.TypeString, Default: ""},
	}
	// ImportTasksTable holds the schema information for the "import_tasks" table.
	ImportTasksTable = &schema.Table{
		Name:        "import_tasks",
		Columns:     ImportTasksColumns,
		PrimaryKey:  []*schema.Column{ImportTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// InformationClassifiesColumns holds the columns for the "information_classifies" table.
	InformationClassifiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
	}
	// InformationClassifiesTable holds the schema information for the "information_classifies" table.
	InformationClassifiesTable = &schema.Table{
		Name:        "information_classifies",
		Columns:     InformationClassifiesColumns,
		PrimaryKey:  []*schema.Column{InformationClassifiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ItemCategoriesColumns holds the columns for the "item_categories" table.
	ItemCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "code", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "pid", Type: field.TypeInt, Nullable: true},
	}
	// ItemCategoriesTable holds the schema information for the "item_categories" table.
	ItemCategoriesTable = &schema.Table{
		Name:       "item_categories",
		Columns:    ItemCategoriesColumns,
		PrimaryKey: []*schema.Column{ItemCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "item_categories_item_categories_children",
				Columns:    []*schema.Column{ItemCategoriesColumns[10]},
				RefColumns: []*schema.Column{ItemCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcClassesColumns holds the columns for the "kc_classes" table.
	KcClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "class_title", Type: field.TypeString, Default: ""},
		{Name: "class_code", Type: field.TypeString, Default: ""},
		{Name: "class_desc", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "is_display", Type: field.TypeUint8, Default: 1},
		{Name: "is_buy", Type: field.TypeUint8, Default: 1},
		{Name: "class_period_type", Type: field.TypeUint8, Default: 3},
		{Name: "class_start_date", Type: field.TypeTime, Nullable: true},
		{Name: "class_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "closing_date", Type: field.TypeTime, Nullable: true},
		{Name: "days_validity", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeUint8, Default: 2},
		{Name: "price", Type: field.TypeFloat64, Default: 0},
		{Name: "student_count", Type: field.TypeInt, Default: 0},
		{Name: "course_count", Type: field.TypeInt, Default: 0},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "class_cover_img_id", Type: field.TypeInt, Nullable: true},
		{Name: "city_id", Type: field.TypeInt, Nullable: true},
		{Name: "cate_id", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "class_head_master_id", Type: field.TypeInt, Nullable: true},
	}
	// KcClassesTable holds the schema information for the "kc_classes" table.
	KcClassesTable = &schema.Table{
		Name:       "kc_classes",
		Columns:    KcClassesColumns,
		PrimaryKey: []*schema.Column{KcClassesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_classes_admins_class_admin",
				Columns:    []*schema.Column{KcClassesColumns[19]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_classes_attachments_class_cover_attachments",
				Columns:    []*schema.Column{KcClassesColumns[20]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_classes_cities_kc_class",
				Columns:    []*schema.Column{KcClassesColumns[21]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_classes_item_categories_kc_class",
				Columns:    []*schema.Column{KcClassesColumns[22]},
				RefColumns: []*schema.Column{ItemCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_classes_teachers_kc_class_masters",
				Columns:    []*schema.Column{KcClassesColumns[23]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "kcclass_class_code",
				Unique:  false,
				Columns: []*schema.Column{KcClassesColumns[6]},
			},
		},
	}
	// KcClassTeachersColumns holds the columns for the "kc_class_teachers" table.
	KcClassTeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "show_status", Type: field.TypeUint8, Default: 1},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "class_id", Type: field.TypeInt, Nullable: true},
		{Name: "teacher_id", Type: field.TypeInt, Nullable: true},
	}
	// KcClassTeachersTable holds the schema information for the "kc_class_teachers" table.
	KcClassTeachersTable = &schema.Table{
		Name:       "kc_class_teachers",
		Columns:    KcClassTeachersColumns,
		PrimaryKey: []*schema.Column{KcClassTeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_class_teachers_kc_classes_class_teachers",
				Columns:    []*schema.Column{KcClassTeachersColumns[3]},
				RefColumns: []*schema.Column{KcClassesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_class_teachers_teachers_teacher_classes",
				Columns:    []*schema.Column{KcClassTeachersColumns[4]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcCoursesColumns holds the columns for the "kc_courses" table.
	KcCoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "course_name", Type: field.TypeString, Default: ""},
		{Name: "course_type", Type: field.TypeUint8, Default: 1},
		{Name: "people_num", Type: field.TypeInt, Default: 0},
		{Name: "course_price", Type: field.TypeFloat64, Default: 0},
		{Name: "course_desc", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "push_status", Type: field.TypeUint8, Default: 2},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "course_cover_img_id", Type: field.TypeInt, Nullable: true},
		{Name: "city_id", Type: field.TypeInt, Nullable: true},
		{Name: "cate_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// KcCoursesTable holds the schema information for the "kc_courses" table.
	KcCoursesTable = &schema.Table{
		Name:       "kc_courses",
		Columns:    KcCoursesColumns,
		PrimaryKey: []*schema.Column{KcCoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_courses_admins_course",
				Columns:    []*schema.Column{KcCoursesColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_courses_attachments_course_attachments",
				Columns:    []*schema.Column{KcCoursesColumns[12]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_courses_cities_course",
				Columns:    []*schema.Column{KcCoursesColumns[13]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_courses_item_categories_course",
				Columns:    []*schema.Column{KcCoursesColumns[14]},
				RefColumns: []*schema.Column{ItemCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_courses_tk_question_banks_question_bank_courses",
				Columns:    []*schema.Column{KcCoursesColumns[15]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "kccourse_cate_id",
				Unique:  false,
				Columns: []*schema.Column{KcCoursesColumns[14]},
			},
		},
	}
	// KcCourseChaptersColumns holds the columns for the "kc_course_chapters" table.
	KcCourseChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
	}
	// KcCourseChaptersTable holds the schema information for the "kc_course_chapters" table.
	KcCourseChaptersTable = &schema.Table{
		Name:       "kc_course_chapters",
		Columns:    KcCourseChaptersColumns,
		PrimaryKey: []*schema.Column{KcCourseChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_course_chapters_kc_courses_course_chapters",
				Columns:    []*schema.Column{KcCourseChaptersColumns[2]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "kccoursechapter_course_id",
				Unique:  false,
				Columns: []*schema.Column{KcCourseChaptersColumns[2]},
			},
		},
	}
	// KcCourseSectionsColumns holds the columns for the "kc_course_sections" table.
	KcCourseSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "course_chapter_id", Type: field.TypeInt, Nullable: true},
	}
	// KcCourseSectionsTable holds the schema information for the "kc_course_sections" table.
	KcCourseSectionsTable = &schema.Table{
		Name:       "kc_course_sections",
		Columns:    KcCourseSectionsColumns,
		PrimaryKey: []*schema.Column{KcCourseSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_course_sections_kc_course_chapters_chapter_sections",
				Columns:    []*schema.Column{KcCourseSectionsColumns[2]},
				RefColumns: []*schema.Column{KcCourseChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcCourseSmallCategoriesColumns holds the columns for the "kc_course_small_categories" table.
	KcCourseSmallCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "small_name", Type: field.TypeString, Default: ""},
		{Name: "viewing_time", Type: field.TypeInt, Default: 0},
		{Name: "finish_type", Type: field.TypeUint8, Default: 1},
		{Name: "teach_type", Type: field.TypeUint8, Default: 1},
		{Name: "type", Type: field.TypeUint8, Default: 1},
		{Name: "live_small_start", Type: field.TypeTime, Nullable: true},
		{Name: "live_small_status", Type: field.TypeInt8, Default: 0},
		{Name: "live_room_id", Type: field.TypeInt, Nullable: true},
		{Name: "back_video_id", Type: field.TypeInt, Nullable: true},
		{Name: "false_video_id", Type: field.TypeInt, Nullable: true},
		{Name: "order_video_id", Type: field.TypeInt, Nullable: true},
		{Name: "live_small_time", Type: field.TypeInt, Default: 0},
		{Name: "push_status", Type: field.TypeUint8, Default: 2},
		{Name: "live_small_remark", Type: field.TypeString, Default: ""},
		{Name: "courseware_name", Type: field.TypeString, Default: ""},
		{Name: "attachment_count", Type: field.TypeInt, Default: 0},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "exam_count", Type: field.TypeInt, Default: 0},
		{Name: "homework_count", Type: field.TypeInt, Default: 0},
		{Name: "study_count", Type: field.TypeInt, Default: 0},
		{Name: "finish_count", Type: field.TypeInt, Default: 0},
		{Name: "average_view_duration", Type: field.TypeInt, Default: 0},
		{Name: "courseware_attach_id", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "order_video_attach_id", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "chapter_id", Type: field.TypeInt, Nullable: true},
		{Name: "section_id", Type: field.TypeInt, Nullable: true},
	}
	// KcCourseSmallCategoriesTable holds the schema information for the "kc_course_small_categories" table.
	KcCourseSmallCategoriesTable = &schema.Table{
		Name:       "kc_course_small_categories",
		Columns:    KcCourseSmallCategoriesColumns,
		PrimaryKey: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_course_small_categories_attachments_courseware_attachment",
				Columns:    []*schema.Column{KcCourseSmallCategoriesColumns[27]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_course_small_categories_attachments_order_attachment",
				Columns:    []*schema.Column{KcCourseSmallCategoriesColumns[28]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_course_small_categories_kc_courses_course_small_categorys",
				Columns:    []*schema.Column{KcCourseSmallCategoriesColumns[29]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_course_small_categories_kc_course_chapters_course_small_chapters",
				Columns:    []*schema.Column{KcCourseSmallCategoriesColumns[30]},
				RefColumns: []*schema.Column{KcCourseChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_course_small_categories_kc_course_sections_course_small_sections",
				Columns:    []*schema.Column{KcCourseSmallCategoriesColumns[31]},
				RefColumns: []*schema.Column{KcCourseSectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "kccoursesmallcategory_course_id",
				Unique:  false,
				Columns: []*schema.Column{KcCourseSmallCategoriesColumns[29]},
			},
		},
	}
	// KcCourseTeachersColumns holds the columns for the "kc_course_teachers" table.
	KcCourseTeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "show_status", Type: field.TypeUint8, Default: 1},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "teacher_id", Type: field.TypeInt, Nullable: true},
	}
	// KcCourseTeachersTable holds the schema information for the "kc_course_teachers" table.
	KcCourseTeachersTable = &schema.Table{
		Name:       "kc_course_teachers",
		Columns:    KcCourseTeachersColumns,
		PrimaryKey: []*schema.Column{KcCourseTeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_course_teachers_kc_courses_course_teachers",
				Columns:    []*schema.Column{KcCourseTeachersColumns[3]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_course_teachers_teachers_teacher_courses",
				Columns:    []*schema.Column{KcCourseTeachersColumns[4]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcCourseVideosColumns holds the columns for the "kc_course_videos" table.
	KcCourseVideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "video_title", Type: field.TypeString, Default: ""},
		{Name: "file_type", Type: field.TypeInt8, Default: 1},
		{Name: "file_path", Type: field.TypeString, Default: ""},
		{Name: "subtitle_path", Type: field.TypeString, Default: ""},
		{Name: "video_time", Type: field.TypeString, Default: ""},
	}
	// KcCourseVideosTable holds the schema information for the "kc_course_videos" table.
	KcCourseVideosTable = &schema.Table{
		Name:        "kc_course_videos",
		Columns:     KcCourseVideosColumns,
		PrimaryKey:  []*schema.Column{KcCourseVideosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "kccoursevideo_video_title",
				Unique:  false,
				Columns: []*schema.Column{KcCourseVideosColumns[1]},
			},
		},
	}
	// KcSmallCategoryAttachmentsColumns holds the columns for the "kc_small_category_attachments" table.
	KcSmallCategoryAttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "attachment_name", Type: field.TypeString, Default: ""},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
		{Name: "small_category_id", Type: field.TypeInt, Nullable: true},
	}
	// KcSmallCategoryAttachmentsTable holds the schema information for the "kc_small_category_attachments" table.
	KcSmallCategoryAttachmentsTable = &schema.Table{
		Name:       "kc_small_category_attachments",
		Columns:    KcSmallCategoryAttachmentsColumns,
		PrimaryKey: []*schema.Column{KcSmallCategoryAttachmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_small_category_attachments_attachments_small_category_attachments",
				Columns:    []*schema.Column{KcSmallCategoryAttachmentsColumns[6]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_small_category_attachments_kc_course_small_categories_course_small_category_attachments",
				Columns:    []*schema.Column{KcSmallCategoryAttachmentsColumns[7]},
				RefColumns: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcSmallCategoryExamPapersColumns holds the columns for the "kc_small_category_exam_papers" table.
	KcSmallCategoryExamPapersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "small_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_paper_id", Type: field.TypeInt, Nullable: true},
	}
	// KcSmallCategoryExamPapersTable holds the schema information for the "kc_small_category_exam_papers" table.
	KcSmallCategoryExamPapersTable = &schema.Table{
		Name:       "kc_small_category_exam_papers",
		Columns:    KcSmallCategoryExamPapersColumns,
		PrimaryKey: []*schema.Column{KcSmallCategoryExamPapersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_small_category_exam_papers_kc_course_small_categories_course_small_category_exampapers",
				Columns:    []*schema.Column{KcSmallCategoryExamPapersColumns[6]},
				RefColumns: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_small_category_exam_papers_tk_exam_papers_course_exam_papers",
				Columns:    []*schema.Column{KcSmallCategoryExamPapersColumns[7]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcSmallCategoryQuestionsColumns holds the columns for the "kc_small_category_questions" table.
	KcSmallCategoryQuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "small_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
	}
	// KcSmallCategoryQuestionsTable holds the schema information for the "kc_small_category_questions" table.
	KcSmallCategoryQuestionsTable = &schema.Table{
		Name:       "kc_small_category_questions",
		Columns:    KcSmallCategoryQuestionsColumns,
		PrimaryKey: []*schema.Column{KcSmallCategoryQuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_small_category_questions_kc_course_small_categories_course_small_category_questions",
				Columns:    []*schema.Column{KcSmallCategoryQuestionsColumns[5]},
				RefColumns: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_small_category_questions_tk_questions_small_category_questions",
				Columns:    []*schema.Column{KcSmallCategoryQuestionsColumns[6]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcUserClassesColumns holds the columns for the "kc_user_classes" table.
	KcUserClassesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "period_type", Type: field.TypeUint8, Default: 3},
		{Name: "closing_date", Type: field.TypeTime, Nullable: true},
		{Name: "study_rate", Type: field.TypeFloat64, Default: 0},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "price", Type: field.TypeFloat64, Default: 0},
		{Name: "class_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// KcUserClassesTable holds the schema information for the "kc_user_classes" table.
	KcUserClassesTable = &schema.Table{
		Name:       "kc_user_classes",
		Columns:    KcUserClassesColumns,
		PrimaryKey: []*schema.Column{KcUserClassesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_user_classes_kc_classes_kc_user_classes",
				Columns:    []*schema.Column{KcUserClassesColumns[10]},
				RefColumns: []*schema.Column{KcClassesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_user_classes_users_user_classes",
				Columns:    []*schema.Column{KcUserClassesColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcUserCoursesColumns holds the columns for the "kc_user_courses" table.
	KcUserCoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "period_type", Type: field.TypeUint8, Default: 3},
		{Name: "closing_date", Type: field.TypeTime, Nullable: true},
		{Name: "study_rate", Type: field.TypeFloat64, Default: 0},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "price", Type: field.TypeFloat64, Default: 0},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// KcUserCoursesTable holds the schema information for the "kc_user_courses" table.
	KcUserCoursesTable = &schema.Table{
		Name:       "kc_user_courses",
		Columns:    KcUserCoursesColumns,
		PrimaryKey: []*schema.Column{KcUserCoursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_user_courses_kc_courses_kc_user_courses",
				Columns:    []*schema.Column{KcUserCoursesColumns[10]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "kc_user_courses_users_user_courses",
				Columns:    []*schema.Column{KcUserCoursesColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KcVideoUploadTasksColumns holds the columns for the "kc_video_upload_tasks" table.
	KcVideoUploadTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "video_id", Type: field.TypeInt, Nullable: true},
		{Name: "type", Type: field.TypeUint8, Default: 1},
		{Name: "course_id", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeInt, Default: 1},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "video_name", Type: field.TypeString, Default: ""},
		{Name: "total_size", Type: field.TypeInt, Default: 0},
		{Name: "length", Type: field.TypeInt, Default: 0},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
	}
	// KcVideoUploadTasksTable holds the schema information for the "kc_video_upload_tasks" table.
	KcVideoUploadTasksTable = &schema.Table{
		Name:       "kc_video_upload_tasks",
		Columns:    KcVideoUploadTasksColumns,
		PrimaryKey: []*schema.Column{KcVideoUploadTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_video_upload_tasks_attachments_video_task_attachment",
				Columns:    []*schema.Column{KcVideoUploadTasksColumns[14]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LevelsColumns holds the columns for the "levels" table.
	LevelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "code", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
	}
	// LevelsTable holds the schema information for the "levels" table.
	LevelsTable = &schema.Table{
		Name:        "levels",
		Columns:     LevelsColumns,
		PrimaryKey:  []*schema.Column{LevelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MajorsColumns holds the columns for the "majors" table.
	MajorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "code", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
	}
	// MajorsTable holds the schema information for the "majors" table.
	MajorsTable = &schema.Table{
		Name:        "majors",
		Columns:     MajorsColumns,
		PrimaryKey:  []*schema.Column{MajorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MajorDetailsColumns holds the columns for the "major_details" table.
	MajorDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "subject_count", Type: field.TypeUint8, Default: 0},
		{Name: "star", Type: field.TypeString, Default: "0"},
		{Name: "pass_rate", Type: field.TypeUint8, Default: 0},
		{Name: "student_count", Type: field.TypeUint32, Default: 0},
		{Name: "study_duration", Type: field.TypeUint8, Default: 0},
		{Name: "cover_img_id", Type: field.TypeInt, Nullable: true},
		{Name: "subject_img_id", Type: field.TypeInt, Nullable: true},
		{Name: "major_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// MajorDetailsTable holds the schema information for the "major_details" table.
	MajorDetailsTable = &schema.Table{
		Name:       "major_details",
		Columns:    MajorDetailsColumns,
		PrimaryKey: []*schema.Column{MajorDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "major_details_attachments_major_detail_cover_img",
				Columns:    []*schema.Column{MajorDetailsColumns[12]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "major_details_attachments_major_detail_subject_img",
				Columns:    []*schema.Column{MajorDetailsColumns[13]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "major_details_majors_major_detail",
				Columns:    []*schema.Column{MajorDetailsColumns[14]},
				RefColumns: []*schema.Column{MajorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MajorDetailTagsColumns holds the columns for the "major_detail_tags" table.
	MajorDetailTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "major_detail_id", Type: field.TypeInt, Nullable: true},
	}
	// MajorDetailTagsTable holds the schema information for the "major_detail_tags" table.
	MajorDetailTagsTable = &schema.Table{
		Name:       "major_detail_tags",
		Columns:    MajorDetailTagsColumns,
		PrimaryKey: []*schema.Column{MajorDetailTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "major_detail_tags_major_details_major_detail_tags",
				Columns:    []*schema.Column{MajorDetailTagsColumns[6]},
				RefColumns: []*schema.Column{MajorDetailsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MakeUserQuestionRecordsColumns holds the columns for the "make_user_question_records" table.
	MakeUserQuestionRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_question_type", Type: field.TypeInt, Nullable: true},
		{Name: "exam_id", Type: field.TypeInt, Nullable: true},
		{Name: "sec_id", Type: field.TypeInt, Nullable: true},
	}
	// MakeUserQuestionRecordsTable holds the schema information for the "make_user_question_records" table.
	MakeUserQuestionRecordsTable = &schema.Table{
		Name:       "make_user_question_records",
		Columns:    MakeUserQuestionRecordsColumns,
		PrimaryKey: []*schema.Column{MakeUserQuestionRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "make_user_question_records_tk_exam_papers_make_user_question_exam",
				Columns:    []*schema.Column{MakeUserQuestionRecordsColumns[8]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "make_user_question_records_tk_sections_make_user_question_sec",
				Columns:    []*schema.Column{MakeUserQuestionRecordsColumns[9]},
				RefColumns: []*schema.Column{TkSectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "makeuserquestionrecord_user_id",
				Unique:  false,
				Columns: []*schema.Column{MakeUserQuestionRecordsColumns[5]},
			},
			{
				Name:    "makeuserquestionrecord_sec_id",
				Unique:  false,
				Columns: []*schema.Column{MakeUserQuestionRecordsColumns[9]},
			},
			{
				Name:    "makeuserquestionrecord_question_bank_id",
				Unique:  false,
				Columns: []*schema.Column{MakeUserQuestionRecordsColumns[6]},
			},
			{
				Name:    "makeuserquestionrecord_exam_id",
				Unique:  false,
				Columns: []*schema.Column{MakeUserQuestionRecordsColumns[8]},
			},
			{
				Name:    "makeuserquestionrecord_exam_question_type",
				Unique:  false,
				Columns: []*schema.Column{MakeUserQuestionRecordsColumns[7]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "detail", Type: field.TypeString, Default: ""},
		{Name: "publish_type", Type: field.TypeUint8, Default: 0},
		{Name: "status", Type: field.TypeUint8, Default: 2},
		{Name: "publish_status", Type: field.TypeUint8, Default: 2},
		{Name: "auto_publish_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
		{Name: "class_id", Type: field.TypeInt, Nullable: true},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "message_type_id", Type: field.TypeInt, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_admins_message_created_admin_id",
				Columns:    []*schema.Column{MessagesColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_attachments_message_attachment",
				Columns:    []*schema.Column{MessagesColumns[12]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_kc_classes_message_classes",
				Columns:    []*schema.Column{MessagesColumns[13]},
				RefColumns: []*schema.Column{KcClassesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_kc_courses_message_courses",
				Columns:    []*schema.Column{MessagesColumns[14]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_message_types_messages",
				Columns:    []*schema.Column{MessagesColumns[15]},
				RefColumns: []*schema.Column{MessageTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessageTypesColumns holds the columns for the "message_types" table.
	MessageTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
	}
	// MessageTypesTable holds the schema information for the "message_types" table.
	MessageTypesTable = &schema.Table{
		Name:        "message_types",
		Columns:     MessageTypesColumns,
		PrimaryKey:  []*schema.Column{MessageTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "pid", Type: field.TypeUint32, Default: 0},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:        "permissions",
		Columns:     PermissionsColumns,
		PrimaryKey:  []*schema.Column{PermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolePermissionsColumns holds the columns for the "role_permissions" table.
	RolePermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "permission_id", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "role_id", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// RolePermissionsTable holds the schema information for the "role_permissions" table.
	RolePermissionsTable = &schema.Table{
		Name:       "role_permissions",
		Columns:    RolePermissionsColumns,
		PrimaryKey: []*schema.Column{RolePermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_permissions_roles_role_permission",
				Columns:    []*schema.Column{RolePermissionsColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SharePostersColumns holds the columns for the "share_posters" table.
	SharePostersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "url", Type: field.TypeString, Default: ""},
		{Name: "remark", Type: field.TypeString, Default: ""},
		{Name: "share_count", Type: field.TypeInt, Default: 0},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "share_poster_img_id", Type: field.TypeInt, Nullable: true},
	}
	// SharePostersTable holds the schema information for the "share_posters" table.
	SharePostersTable = &schema.Table{
		Name:       "share_posters",
		Columns:    SharePostersColumns,
		PrimaryKey: []*schema.Column{SharePostersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "share_posters_attachments_share_poster_attachments",
				Columns:    []*schema.Column{SharePostersColumns[11]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "sex", Type: field.TypeUint8, Default: 0},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "nickname", Type: field.TypeString, Default: ""},
		{Name: "sub_title", Type: field.TypeString, Default: ""},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "teaching_age", Type: field.TypeUint8, Default: 0},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "avatar_id", Type: field.TypeInt, Nullable: true},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:       "teachers",
		Columns:    TeachersColumns,
		PrimaryKey: []*schema.Column{TeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teachers_attachments_teacher_attachments",
				Columns:    []*schema.Column{TeachersColumns[15]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeacherTagsColumns holds the columns for the "teacher_tags" table.
	TeacherTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "teacher_id", Type: field.TypeInt, Nullable: true},
	}
	// TeacherTagsTable holds the schema information for the "teacher_tags" table.
	TeacherTagsTable = &schema.Table{
		Name:       "teacher_tags",
		Columns:    TeacherTagsColumns,
		PrimaryKey: []*schema.Column{TeacherTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teacher_tags_teachers_teacher_tags",
				Columns:    []*schema.Column{TeacherTagsColumns[6]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkChaptersColumns holds the columns for the "tk_chapters" table.
	TkChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkChaptersTable holds the schema information for the "tk_chapters" table.
	TkChaptersTable = &schema.Table{
		Name:       "tk_chapters",
		Columns:    TkChaptersColumns,
		PrimaryKey: []*schema.Column{TkChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_chapters_tk_question_banks_question_chapters",
				Columns:    []*schema.Column{TkChaptersColumns[7]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkExamPapersColumns holds the columns for the "tk_exam_papers" table.
	TkExamPapersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "exam_question_type", Type: field.TypeUint8, Default: 0},
		{Name: "exam_type", Type: field.TypeUint8, Default: 0},
		{Name: "difficulty", Type: field.TypeUint8, Default: 0},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "answered_user_count", Type: field.TypeInt, Default: 0},
		{Name: "score", Type: field.TypeInt, Default: 0},
		{Name: "pass_score", Type: field.TypeInt, Default: 0},
		{Name: "duration", Type: field.TypeInt, Default: 0},
		{Name: "duration_type", Type: field.TypeInt, Default: 0},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "enable_status", Type: field.TypeUint8, Default: 1},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamPapersTable holds the schema information for the "tk_exam_papers" table.
	TkExamPapersTable = &schema.Table{
		Name:       "tk_exam_papers",
		Columns:    TkExamPapersColumns,
		PrimaryKey: []*schema.Column{TkExamPapersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_exam_papers_admins_admin_exam_papers",
				Columns:    []*schema.Column{TkExamPapersColumns[19]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_exam_papers_tk_question_banks_exam_papers",
				Columns:    []*schema.Column{TkExamPapersColumns[20]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkExamPaperPartitionsColumns holds the columns for the "tk_exam_paper_partitions" table.
	TkExamPaperPartitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "duration", Type: field.TypeInt, Default: 0},
		{Name: "type", Type: field.TypeInt, Default: 0},
		{Name: "question_count", Type: field.TypeUint8, Default: 0},
		{Name: "exam_paper_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamPaperPartitionsTable holds the schema information for the "tk_exam_paper_partitions" table.
	TkExamPaperPartitionsTable = &schema.Table{
		Name:       "tk_exam_paper_partitions",
		Columns:    TkExamPaperPartitionsColumns,
		PrimaryKey: []*schema.Column{TkExamPaperPartitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_exam_paper_partitions_tk_exam_papers_exam_partitions",
				Columns:    []*schema.Column{TkExamPaperPartitionsColumns[10]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkExamPaperPartitionScoresColumns holds the columns for the "tk_exam_paper_partition_scores" table.
	TkExamPaperPartitionScoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "singe_select", Type: field.TypeUint8, Default: 0},
		{Name: "judge_question", Type: field.TypeUint8, Default: 0},
		{Name: "multi_select", Type: field.TypeUint8, Default: 0},
		{Name: "shorter_answer", Type: field.TypeUint8, Default: 0},
		{Name: "material_question", Type: field.TypeUint8, Default: 0},
		{Name: "singe_select_count", Type: field.TypeUint8, Default: 0},
		{Name: "judge_question_count", Type: field.TypeUint8, Default: 0},
		{Name: "multi_select_count", Type: field.TypeUint8, Default: 0},
		{Name: "shorter_answer_count", Type: field.TypeUint8, Default: 0},
		{Name: "material_question_count", Type: field.TypeUint8, Default: 0},
		{Name: "exam_paper_partition_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamPaperPartitionScoresTable holds the schema information for the "tk_exam_paper_partition_scores" table.
	TkExamPaperPartitionScoresTable = &schema.Table{
		Name:       "tk_exam_paper_partition_scores",
		Columns:    TkExamPaperPartitionScoresColumns,
		PrimaryKey: []*schema.Column{TkExamPaperPartitionScoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_exam_paper_partition_scores_tk_exam_paper_partitions_exam_partition_scores",
				Columns:    []*schema.Column{TkExamPaperPartitionScoresColumns[15]},
				RefColumns: []*schema.Column{TkExamPaperPartitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkExamPaperSimulationsColumns holds the columns for the "tk_exam_paper_simulations" table.
	TkExamPaperSimulationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "enable_status", Type: field.TypeUint8, Default: 0},
		{Name: "exam_paper_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamPaperSimulationsTable holds the schema information for the "tk_exam_paper_simulations" table.
	TkExamPaperSimulationsTable = &schema.Table{
		Name:        "tk_exam_paper_simulations",
		Columns:     TkExamPaperSimulationsColumns,
		PrimaryKey:  []*schema.Column{TkExamPaperSimulationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TkExamPartitionQuestionLinksColumns holds the columns for the "tk_exam_partition_question_links" table.
	TkExamPartitionQuestionLinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "question_score", Type: field.TypeUint8, Default: 0},
		{Name: "exam_paper_partition_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamPartitionQuestionLinksTable holds the schema information for the "tk_exam_partition_question_links" table.
	TkExamPartitionQuestionLinksTable = &schema.Table{
		Name:       "tk_exam_partition_question_links",
		Columns:    TkExamPartitionQuestionLinksColumns,
		PrimaryKey: []*schema.Column{TkExamPartitionQuestionLinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_exam_partition_question_links_tk_exam_paper_partitions_exam_partition_links",
				Columns:    []*schema.Column{TkExamPartitionQuestionLinksColumns[6]},
				RefColumns: []*schema.Column{TkExamPaperPartitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_exam_partition_question_links_tk_questions_exam_partition_questions",
				Columns:    []*schema.Column{TkExamPartitionQuestionLinksColumns[7]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkExamQuestionTypesColumns holds the columns for the "tk_exam_question_types" table.
	TkExamQuestionTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "exam_question_type", Type: field.TypeUint8, Default: 0},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "answered_count", Type: field.TypeInt, Default: 0},
		{Name: "answered_user_count", Type: field.TypeInt, Default: 0},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkExamQuestionTypesTable holds the schema information for the "tk_exam_question_types" table.
	TkExamQuestionTypesTable = &schema.Table{
		Name:       "tk_exam_question_types",
		Columns:    TkExamQuestionTypesColumns,
		PrimaryKey: []*schema.Column{TkExamQuestionTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_exam_question_types_tk_question_banks_exam_question_types",
				Columns:    []*schema.Column{TkExamQuestionTypesColumns[9]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkKnowledgePointsColumns holds the columns for the "tk_knowledge_points" table.
	TkKnowledgePointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkKnowledgePointsTable holds the schema information for the "tk_knowledge_points" table.
	TkKnowledgePointsTable = &schema.Table{
		Name:       "tk_knowledge_points",
		Columns:    TkKnowledgePointsColumns,
		PrimaryKey: []*schema.Column{TkKnowledgePointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_knowledge_points_tk_question_banks_knowledge_points",
				Columns:    []*schema.Column{TkKnowledgePointsColumns[7]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionsColumns holds the columns for the "tk_questions" table.
	TkQuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "difficulty", Type: field.TypeUint8, Default: 0},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "desc", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "answer_count", Type: field.TypeInt, Default: 0},
		{Name: "right_count", Type: field.TypeInt, Default: 0},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "pid", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionsTable holds the schema information for the "tk_questions" table.
	TkQuestionsTable = &schema.Table{
		Name:       "tk_questions",
		Columns:    TkQuestionsColumns,
		PrimaryKey: []*schema.Column{TkQuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_questions_admins_admin_Questions",
				Columns:    []*schema.Column{TkQuestionsColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_questions_tk_questions_children",
				Columns:    []*schema.Column{TkQuestionsColumns[12]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_questions_tk_question_banks_questions",
				Columns:    []*schema.Column{TkQuestionsColumns[13]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionAnswerOptionsColumns holds the columns for the "tk_question_answer_options" table.
	TkQuestionAnswerOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "option_name", Type: field.TypeString, Default: ""},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "is_right", Type: field.TypeUint8, Default: 1},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionAnswerOptionsTable holds the schema information for the "tk_question_answer_options" table.
	TkQuestionAnswerOptionsTable = &schema.Table{
		Name:       "tk_question_answer_options",
		Columns:    TkQuestionAnswerOptionsColumns,
		PrimaryKey: []*schema.Column{TkQuestionAnswerOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_answer_options_tk_questions_answer_options",
				Columns:    []*schema.Column{TkQuestionAnswerOptionsColumns[8]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionBanksColumns holds the columns for the "tk_question_banks" table.
	TkQuestionBanksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "item_category_id", Type: field.TypeInt, Nullable: true},
		{Name: "level_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionBanksTable holds the schema information for the "tk_question_banks" table.
	TkQuestionBanksTable = &schema.Table{
		Name:       "tk_question_banks",
		Columns:    TkQuestionBanksColumns,
		PrimaryKey: []*schema.Column{TkQuestionBanksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_banks_admins_admin_question_banks",
				Columns:    []*schema.Column{TkQuestionBanksColumns[9]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_banks_item_categories_item_question_banks",
				Columns:    []*schema.Column{TkQuestionBanksColumns[10]},
				RefColumns: []*schema.Column{ItemCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_banks_levels_level_question_banks",
				Columns:    []*schema.Column{TkQuestionBanksColumns[11]},
				RefColumns: []*schema.Column{LevelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionBankCitiesColumns holds the columns for the "tk_question_bank_cities" table.
	TkQuestionBankCitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "city_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionBankCitiesTable holds the schema information for the "tk_question_bank_cities" table.
	TkQuestionBankCitiesTable = &schema.Table{
		Name:       "tk_question_bank_cities",
		Columns:    TkQuestionBankCitiesColumns,
		PrimaryKey: []*schema.Column{TkQuestionBankCitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_bank_cities_cities_question_bank_cities",
				Columns:    []*schema.Column{TkQuestionBankCitiesColumns[5]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_bank_cities_tk_question_banks_city_question_banks",
				Columns:    []*schema.Column{TkQuestionBankCitiesColumns[6]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionBankMajorsColumns holds the columns for the "tk_question_bank_majors" table.
	TkQuestionBankMajorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "major_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionBankMajorsTable holds the schema information for the "tk_question_bank_majors" table.
	TkQuestionBankMajorsTable = &schema.Table{
		Name:       "tk_question_bank_majors",
		Columns:    TkQuestionBankMajorsColumns,
		PrimaryKey: []*schema.Column{TkQuestionBankMajorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_bank_majors_majors_question_bank_majors",
				Columns:    []*schema.Column{TkQuestionBankMajorsColumns[5]},
				RefColumns: []*schema.Column{MajorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_bank_majors_tk_question_banks_major_question_banks",
				Columns:    []*schema.Column{TkQuestionBankMajorsColumns[6]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionErrorFeedbacksColumns holds the columns for the "tk_question_error_feedbacks" table.
	TkQuestionErrorFeedbacksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Default: ""},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "error_desc", Type: field.TypeString, Default: ""},
		{Name: "error_type", Type: field.TypeUint8, Default: 5},
		{Name: "status", Type: field.TypeUint8, Default: 2},
		{Name: "deal_remark", Type: field.TypeString, Default: ""},
		{Name: "operator_admin_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionErrorFeedbacksTable holds the schema information for the "tk_question_error_feedbacks" table.
	TkQuestionErrorFeedbacksTable = &schema.Table{
		Name:       "tk_question_error_feedbacks",
		Columns:    TkQuestionErrorFeedbacksColumns,
		PrimaryKey: []*schema.Column{TkQuestionErrorFeedbacksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_error_feedbacks_admins_admin_error_feedbacks",
				Columns:    []*schema.Column{TkQuestionErrorFeedbacksColumns[11]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_error_feedbacks_tk_questions_question_error_feedbacks",
				Columns:    []*schema.Column{TkQuestionErrorFeedbacksColumns[12]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkQuestionSectionsColumns holds the columns for the "tk_question_sections" table.
	TkQuestionSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
		{Name: "section_id", Type: field.TypeInt, Nullable: true},
	}
	// TkQuestionSectionsTable holds the schema information for the "tk_question_sections" table.
	TkQuestionSectionsTable = &schema.Table{
		Name:       "tk_question_sections",
		Columns:    TkQuestionSectionsColumns,
		PrimaryKey: []*schema.Column{TkQuestionSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_sections_tk_questions_question_section_links",
				Columns:    []*schema.Column{TkQuestionSectionsColumns[5]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_question_sections_tk_sections_tk_section_links",
				Columns:    []*schema.Column{TkQuestionSectionsColumns[6]},
				RefColumns: []*schema.Column{TkSectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkSectionsColumns holds the columns for the "tk_sections" table.
	TkSectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "question_count", Type: field.TypeInt, Default: 0},
		{Name: "chapter_id", Type: field.TypeInt, Nullable: true},
	}
	// TkSectionsTable holds the schema information for the "tk_sections" table.
	TkSectionsTable = &schema.Table{
		Name:       "tk_sections",
		Columns:    TkSectionsColumns,
		PrimaryKey: []*schema.Column{TkSectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_sections_tk_chapters_sections",
				Columns:    []*schema.Column{TkSectionsColumns[7]},
				RefColumns: []*schema.Column{TkChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkUserExamScoreRecordsColumns holds the columns for the "tk_user_exam_score_records" table.
	TkUserExamScoreRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "subjective_question_score", Type: field.TypeUint8, Default: 0},
		{Name: "objective_question_score", Type: field.TypeUint8, Default: 0},
		{Name: "total_score", Type: field.TypeUint8, Default: 0},
		{Name: "duration", Type: field.TypeInt, Default: 0},
		{Name: "right_count", Type: field.TypeInt, Default: 0},
		{Name: "wrong_count", Type: field.TypeInt, Default: 0},
		{Name: "total_count", Type: field.TypeInt, Default: 0},
		{Name: "no_answer_count", Type: field.TypeInt, Default: 0},
		{Name: "rank", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeUint8, Default: 0},
		{Name: "order_status", Type: field.TypeUint8, Default: 0},
		{Name: "operation_teacher_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_paper_id", Type: field.TypeInt, Nullable: true},
		{Name: "section_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserExamScoreRecordsTable holds the schema information for the "tk_user_exam_score_records" table.
	TkUserExamScoreRecordsTable = &schema.Table{
		Name:       "tk_user_exam_score_records",
		Columns:    TkUserExamScoreRecordsColumns,
		PrimaryKey: []*schema.Column{TkUserExamScoreRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_exam_score_records_teachers_user_exams_teachers",
				Columns:    []*schema.Column{TkUserExamScoreRecordsColumns[16]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_exam_score_records_tk_exam_papers_user_exam_papers",
				Columns:    []*schema.Column{TkUserExamScoreRecordsColumns[17]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_exam_score_records_tk_sections_user_section_exam",
				Columns:    []*schema.Column{TkUserExamScoreRecordsColumns[18]},
				RefColumns: []*schema.Column{TkSectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_exam_score_records_users_user_exams_records",
				Columns:    []*schema.Column{TkUserExamScoreRecordsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkUserQuestionBankRecordsColumns holds the columns for the "tk_user_question_bank_records" table.
	TkUserQuestionBankRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "record_count", Type: field.TypeInt, Default: 0},
		{Name: "correct_count", Type: field.TypeInt, Default: 0},
		{Name: "wrong_count", Type: field.TypeInt, Default: 0},
		{Name: "correct_rate", Type: field.TypeFloat64, Default: 0},
		{Name: "finish_rate", Type: field.TypeFloat64, Default: 0},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserQuestionBankRecordsTable holds the schema information for the "tk_user_question_bank_records" table.
	TkUserQuestionBankRecordsTable = &schema.Table{
		Name:       "tk_user_question_bank_records",
		Columns:    TkUserQuestionBankRecordsColumns,
		PrimaryKey: []*schema.Column{TkUserQuestionBankRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_question_bank_records_tk_question_banks_user_question_bank",
				Columns:    []*schema.Column{TkUserQuestionBankRecordsColumns[10]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_question_bank_records_users_user_question_bank_records",
				Columns:    []*schema.Column{TkUserQuestionBankRecordsColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "tkuserquestionbankrecord_question_bank_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserQuestionBankRecordsColumns[10]},
			},
			{
				Name:    "tkuserquestionbankrecord_user_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserQuestionBankRecordsColumns[11]},
			},
		},
	}
	// TkUserQuestionRecordsColumns holds the columns for the "tk_user_question_records" table.
	TkUserQuestionRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "correct_count", Type: field.TypeInt, Default: 0},
		{Name: "answer_count", Type: field.TypeInt, Default: 0},
		{Name: "answer", Type: field.TypeString, Default: ""},
		{Name: "is_right", Type: field.TypeUint8, Default: 1},
		{Name: "exam_question_type", Type: field.TypeUint8, Default: 0},
		{Name: "question_type", Type: field.TypeUint8, Default: 0},
		{Name: "exam_paper_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "section_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserQuestionRecordsTable holds the schema information for the "tk_user_question_records" table.
	TkUserQuestionRecordsTable = &schema.Table{
		Name:       "tk_user_question_records",
		Columns:    TkUserQuestionRecordsColumns,
		PrimaryKey: []*schema.Column{TkUserQuestionRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_question_records_tk_exam_papers_exam_paper_records",
				Columns:    []*schema.Column{TkUserQuestionRecordsColumns[11]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_question_records_tk_questions_user_records",
				Columns:    []*schema.Column{TkUserQuestionRecordsColumns[12]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_question_records_tk_question_banks_user_bank_records",
				Columns:    []*schema.Column{TkUserQuestionRecordsColumns[13]},
				RefColumns: []*schema.Column{TkQuestionBanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_question_records_tk_sections_section_records",
				Columns:    []*schema.Column{TkUserQuestionRecordsColumns[14]},
				RefColumns: []*schema.Column{TkSectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_question_records_users_user_question_records",
				Columns:    []*schema.Column{TkUserQuestionRecordsColumns[15]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkUserRandomExamRecodesColumns holds the columns for the "tk_user_random_exam_recodes" table.
	TkUserRandomExamRecodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "exam_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserRandomExamRecodesTable holds the schema information for the "tk_user_random_exam_recodes" table.
	TkUserRandomExamRecodesTable = &schema.Table{
		Name:       "tk_user_random_exam_recodes",
		Columns:    TkUserRandomExamRecodesColumns,
		PrimaryKey: []*schema.Column{TkUserRandomExamRecodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_random_exam_recodes_tk_exam_papers_user_random_exam",
				Columns:    []*schema.Column{TkUserRandomExamRecodesColumns[6]},
				RefColumns: []*schema.Column{TkExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "tkuserrandomexamrecode_user_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserRandomExamRecodesColumns[5]},
			},
			{
				Name:    "tkuserrandomexamrecode_exam_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserRandomExamRecodesColumns[6]},
			},
		},
	}
	// TkUserSimulationTeacherMarksColumns holds the columns for the "tk_user_simulation_teacher_marks" table.
	TkUserSimulationTeacherMarksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "score", Type: field.TypeUint8, Default: 0},
		{Name: "desc", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_exam_record_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserSimulationTeacherMarksTable holds the schema information for the "tk_user_simulation_teacher_marks" table.
	TkUserSimulationTeacherMarksTable = &schema.Table{
		Name:       "tk_user_simulation_teacher_marks",
		Columns:    TkUserSimulationTeacherMarksColumns,
		PrimaryKey: []*schema.Column{TkUserSimulationTeacherMarksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_simulation_teacher_marks_tk_questions_user_exam_questions",
				Columns:    []*schema.Column{TkUserSimulationTeacherMarksColumns[7]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tk_user_simulation_teacher_marks_tk_user_exam_score_records_user_exam_details",
				Columns:    []*schema.Column{TkUserSimulationTeacherMarksColumns[8]},
				RefColumns: []*schema.Column{TkUserExamScoreRecordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TkUserWrongQuestionRecodesColumns holds the columns for the "tk_user_wrong_question_recodes" table.
	TkUserWrongQuestionRecodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "question_bank_id", Type: field.TypeInt, Nullable: true},
		{Name: "answer", Type: field.TypeString, Nullable: true},
		{Name: "wrong_exam_type", Type: field.TypeInt, Default: 0},
		{Name: "wrong_question_type", Type: field.TypeInt, Default: 0},
		{Name: "question_id", Type: field.TypeInt, Nullable: true},
	}
	// TkUserWrongQuestionRecodesTable holds the schema information for the "tk_user_wrong_question_recodes" table.
	TkUserWrongQuestionRecodesTable = &schema.Table{
		Name:       "tk_user_wrong_question_recodes",
		Columns:    TkUserWrongQuestionRecodesColumns,
		PrimaryKey: []*schema.Column{TkUserWrongQuestionRecodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_wrong_question_recodes_tk_questions_user_recode_wrong",
				Columns:    []*schema.Column{TkUserWrongQuestionRecodesColumns[10]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "tkuserwrongquestionrecode_user_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserWrongQuestionRecodesColumns[5]},
			},
			{
				Name:    "tkuserwrongquestionrecode_question_id",
				Unique:  false,
				Columns: []*schema.Column{TkUserWrongQuestionRecodesColumns[10]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "salt", Type: field.TypeString},
		{Name: "boss_user_id", Type: field.TypeInt, Default: 0},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "phone", Type: field.TypeString, Default: ""},
		{Name: "nickname", Type: field.TypeString, Default: ""},
		{Name: "username", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeUint8, Default: 1},
		{Name: "sex", Type: field.TypeUint8, Default: 3},
		{Name: "reg_from", Type: field.TypeUint8, Default: 1},
		{Name: "card_type", Type: field.TypeUint8, Default: 1},
		{Name: "id_card", Type: field.TypeString, Default: ""},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "sign_remark", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "avatar", Type: field.TypeString, Default: ""},
		{Name: "from_city_id", Type: field.TypeInt, Nullable: true},
		{Name: "from_item_category_id", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_cities_user_city",
				Columns:    []*schema.Column{UsersColumns[20]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_item_categories_user_item_cate",
				Columns:    []*schema.Column{UsersColumns[21]},
				RefColumns: []*schema.Column{ItemCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserAskAnswersColumns holds the columns for the "user_ask_answers" table.
	UserAskAnswersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "ask_desc", Type: field.TypeString, Default: ""},
		{Name: "answer_status", Type: field.TypeUint8, Default: 2},
		{Name: "show_status", Type: field.TypeUint8, Default: 1},
		{Name: "reply_show_status", Type: field.TypeUint8, Default: 1},
		{Name: "answer_desc", Type: field.TypeString, Default: ""},
		{Name: "answer_at", Type: field.TypeTime, Nullable: true},
		{Name: "teacher_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// UserAskAnswersTable holds the schema information for the "user_ask_answers" table.
	UserAskAnswersTable = &schema.Table{
		Name:       "user_ask_answers",
		Columns:    UserAskAnswersColumns,
		PrimaryKey: []*schema.Column{UserAskAnswersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_ask_answers_teachers_ask_teachers",
				Columns:    []*schema.Column{UserAskAnswersColumns[11]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_ask_answers_users_ask_users",
				Columns:    []*schema.Column{UserAskAnswersColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserAskAnswerAttachmentsColumns holds the columns for the "user_ask_answer_attachments" table.
	UserAskAnswerAttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeUint8, Default: 1},
		{Name: "attachment_id", Type: field.TypeInt, Nullable: true},
		{Name: "ask_id", Type: field.TypeInt, Nullable: true},
	}
	// UserAskAnswerAttachmentsTable holds the schema information for the "user_ask_answer_attachments" table.
	UserAskAnswerAttachmentsTable = &schema.Table{
		Name:       "user_ask_answer_attachments",
		Columns:    UserAskAnswerAttachmentsColumns,
		PrimaryKey: []*schema.Column{UserAskAnswerAttachmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_ask_answer_attachments_attachments_ask_attachments",
				Columns:    []*schema.Column{UserAskAnswerAttachmentsColumns[2]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_ask_answer_attachments_user_ask_answers_ask_answers_attachments",
				Columns:    []*schema.Column{UserAskAnswerAttachmentsColumns[3]},
				RefColumns: []*schema.Column{UserAskAnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserCourseAppraisesColumns holds the columns for the "user_course_appraises" table.
	UserCourseAppraisesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "teach_attitude_score", Type: field.TypeFloat64, Default: 0},
		{Name: "teach_content_score", Type: field.TypeFloat64, Default: 0},
		{Name: "teach_atmosphere_score", Type: field.TypeFloat64, Default: 0},
		{Name: "composite_score", Type: field.TypeFloat64, Default: 0},
		{Name: "type", Type: field.TypeUint8, Default: 0},
		{Name: "show_status", Type: field.TypeUint8, Default: 2},
		{Name: "teacher_impression", Type: field.TypeString, Default: ""},
		{Name: "desc", Type: field.TypeString, Default: ""},
		{Name: "teacher_reply", Type: field.TypeString, Default: ""},
		{Name: "course_id", Type: field.TypeInt, Nullable: true},
		{Name: "small_cate_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// UserCourseAppraisesTable holds the schema information for the "user_course_appraises" table.
	UserCourseAppraisesTable = &schema.Table{
		Name:       "user_course_appraises",
		Columns:    UserCourseAppraisesColumns,
		PrimaryKey: []*schema.Column{UserCourseAppraisesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_course_appraises_kc_courses_course_appraise",
				Columns:    []*schema.Column{UserCourseAppraisesColumns[14]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_course_appraises_kc_course_small_categories_course_appraise_smalls",
				Columns:    []*schema.Column{UserCourseAppraisesColumns[15]},
				RefColumns: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_course_appraises_users_course_appraise_users",
				Columns:    []*schema.Column{UserCourseAppraisesColumns[16]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "usercourseappraise_small_cate_id",
				Unique:  false,
				Columns: []*schema.Column{UserCourseAppraisesColumns[15]},
			},
			{
				Name:    "usercourseappraise_course_id",
				Unique:  false,
				Columns: []*schema.Column{UserCourseAppraisesColumns[14]},
			},
			{
				Name:    "usercourseappraise_user_id",
				Unique:  false,
				Columns: []*schema.Column{UserCourseAppraisesColumns[16]},
			},
		},
	}
	// UserLoginLogsColumns holds the columns for the "user_login_logs" table.
	UserLoginLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "cid", Type: field.TypeString, Default: ""},
		{Name: "platform", Type: field.TypeString, Default: ""},
		{Name: "device", Type: field.TypeString, Default: ""},
		{Name: "version", Type: field.TypeString, Default: ""},
		{Name: "ip", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "latest_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_login_log", Type: field.TypeInt, Nullable: true},
	}
	// UserLoginLogsTable holds the schema information for the "user_login_logs" table.
	UserLoginLogsTable = &schema.Table{
		Name:       "user_login_logs",
		Columns:    UserLoginLogsColumns,
		PrimaryKey: []*schema.Column{UserLoginLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_login_logs_users_login_log",
				Columns:    []*schema.Column{UserLoginLogsColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VideoRecordsColumns holds the columns for the "video_records" table.
	VideoRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "video_name", Type: field.TypeString, Default: ""},
		{Name: "view_time", Type: field.TypeUint8, Nullable: true},
		{Name: "video_time", Type: field.TypeInt, Nullable: true},
		{Name: "view_at", Type: field.TypeTime, Nullable: true},
		{Name: "small_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// VideoRecordsTable holds the schema information for the "video_records" table.
	VideoRecordsTable = &schema.Table{
		Name:       "video_records",
		Columns:    VideoRecordsColumns,
		PrimaryKey: []*schema.Column{VideoRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "video_records_kc_course_small_categories_video_record_small",
				Columns:    []*schema.Column{VideoRecordsColumns[9]},
				RefColumns: []*schema.Column{KcCourseSmallCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "video_records_users_user_video_record",
				Columns:    []*schema.Column{VideoRecordsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "videorecord_small_id",
				Unique:  false,
				Columns: []*schema.Column{VideoRecordsColumns[9]},
			},
			{
				Name:    "videorecord_user_id",
				Unique:  false,
				Columns: []*schema.Column{VideoRecordsColumns[10]},
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "admin_id", Type: field.TypeInt},
		{Name: "role_id", Type: field.TypeInt},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0], AdminRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_roles_admin_id",
				Columns:    []*schema.Column{AdminRolesColumns[0]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "admin_roles_role_id",
				Columns:    []*schema.Column{AdminRolesColumns[1]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AttachmentMajorTeacherAttachmentColumns holds the columns for the "attachment_major_teacher_attachment" table.
	AttachmentMajorTeacherAttachmentColumns = []*schema.Column{
		{Name: "attachment_id", Type: field.TypeInt},
		{Name: "major_detail_id", Type: field.TypeInt},
	}
	// AttachmentMajorTeacherAttachmentTable holds the schema information for the "attachment_major_teacher_attachment" table.
	AttachmentMajorTeacherAttachmentTable = &schema.Table{
		Name:       "attachment_major_teacher_attachment",
		Columns:    AttachmentMajorTeacherAttachmentColumns,
		PrimaryKey: []*schema.Column{AttachmentMajorTeacherAttachmentColumns[0], AttachmentMajorTeacherAttachmentColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attachment_major_teacher_attachment_attachment_id",
				Columns:    []*schema.Column{AttachmentMajorTeacherAttachmentColumns[0]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "attachment_major_teacher_attachment_major_detail_id",
				Columns:    []*schema.Column{AttachmentMajorTeacherAttachmentColumns[1]},
				RefColumns: []*schema.Column{MajorDetailsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AttachmentMajorServiceAttachmentColumns holds the columns for the "attachment_major_service_attachment" table.
	AttachmentMajorServiceAttachmentColumns = []*schema.Column{
		{Name: "attachment_id", Type: field.TypeInt},
		{Name: "major_detail_id", Type: field.TypeInt},
	}
	// AttachmentMajorServiceAttachmentTable holds the schema information for the "attachment_major_service_attachment" table.
	AttachmentMajorServiceAttachmentTable = &schema.Table{
		Name:       "attachment_major_service_attachment",
		Columns:    AttachmentMajorServiceAttachmentColumns,
		PrimaryKey: []*schema.Column{AttachmentMajorServiceAttachmentColumns[0], AttachmentMajorServiceAttachmentColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attachment_major_service_attachment_attachment_id",
				Columns:    []*schema.Column{AttachmentMajorServiceAttachmentColumns[0]},
				RefColumns: []*schema.Column{AttachmentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "attachment_major_service_attachment_major_detail_id",
				Columns:    []*schema.Column{AttachmentMajorServiceAttachmentColumns[1]},
				RefColumns: []*schema.Column{MajorDetailsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// KcClassKcClassCoursesColumns holds the columns for the "kc_class_kc_class_courses" table.
	KcClassKcClassCoursesColumns = []*schema.Column{
		{Name: "kc_class_id", Type: field.TypeInt},
		{Name: "kc_course_id", Type: field.TypeInt},
	}
	// KcClassKcClassCoursesTable holds the schema information for the "kc_class_kc_class_courses" table.
	KcClassKcClassCoursesTable = &schema.Table{
		Name:       "kc_class_kc_class_courses",
		Columns:    KcClassKcClassCoursesColumns,
		PrimaryKey: []*schema.Column{KcClassKcClassCoursesColumns[0], KcClassKcClassCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "kc_class_kc_class_courses_kc_class_id",
				Columns:    []*schema.Column{KcClassKcClassCoursesColumns[0]},
				RefColumns: []*schema.Column{KcClassesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "kc_class_kc_class_courses_kc_course_id",
				Columns:    []*schema.Column{KcClassKcClassCoursesColumns[1]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MajorKcClassesColumns holds the columns for the "major_kc_classes" table.
	MajorKcClassesColumns = []*schema.Column{
		{Name: "major_id", Type: field.TypeInt},
		{Name: "kc_class_id", Type: field.TypeInt},
	}
	// MajorKcClassesTable holds the schema information for the "major_kc_classes" table.
	MajorKcClassesTable = &schema.Table{
		Name:       "major_kc_classes",
		Columns:    MajorKcClassesColumns,
		PrimaryKey: []*schema.Column{MajorKcClassesColumns[0], MajorKcClassesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "major_kc_classes_major_id",
				Columns:    []*schema.Column{MajorKcClassesColumns[0]},
				RefColumns: []*schema.Column{MajorsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "major_kc_classes_kc_class_id",
				Columns:    []*schema.Column{MajorKcClassesColumns[1]},
				RefColumns: []*schema.Column{KcClassesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// MajorCoursesColumns holds the columns for the "major_courses" table.
	MajorCoursesColumns = []*schema.Column{
		{Name: "major_id", Type: field.TypeInt},
		{Name: "kc_course_id", Type: field.TypeInt},
	}
	// MajorCoursesTable holds the schema information for the "major_courses" table.
	MajorCoursesTable = &schema.Table{
		Name:       "major_courses",
		Columns:    MajorCoursesColumns,
		PrimaryKey: []*schema.Column{MajorCoursesColumns[0], MajorCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "major_courses_major_id",
				Columns:    []*schema.Column{MajorCoursesColumns[0]},
				RefColumns: []*schema.Column{MajorsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "major_courses_kc_course_id",
				Columns:    []*schema.Column{MajorCoursesColumns[1]},
				RefColumns: []*schema.Column{KcCoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TeacherMajorsColumns holds the columns for the "teacher_majors" table.
	TeacherMajorsColumns = []*schema.Column{
		{Name: "teacher_id", Type: field.TypeInt},
		{Name: "major_id", Type: field.TypeInt},
	}
	// TeacherMajorsTable holds the schema information for the "teacher_majors" table.
	TeacherMajorsTable = &schema.Table{
		Name:       "teacher_majors",
		Columns:    TeacherMajorsColumns,
		PrimaryKey: []*schema.Column{TeacherMajorsColumns[0], TeacherMajorsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teacher_majors_teacher_id",
				Columns:    []*schema.Column{TeacherMajorsColumns[0]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "teacher_majors_major_id",
				Columns:    []*schema.Column{TeacherMajorsColumns[1]},
				RefColumns: []*schema.Column{MajorsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TkQuestionKnowledgePointsColumns holds the columns for the "tk_question_knowledge_points" table.
	TkQuestionKnowledgePointsColumns = []*schema.Column{
		{Name: "tk_question_id", Type: field.TypeInt},
		{Name: "tk_knowledge_point_id", Type: field.TypeInt},
	}
	// TkQuestionKnowledgePointsTable holds the schema information for the "tk_question_knowledge_points" table.
	TkQuestionKnowledgePointsTable = &schema.Table{
		Name:       "tk_question_knowledge_points",
		Columns:    TkQuestionKnowledgePointsColumns,
		PrimaryKey: []*schema.Column{TkQuestionKnowledgePointsColumns[0], TkQuestionKnowledgePointsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_question_knowledge_points_tk_question_id",
				Columns:    []*schema.Column{TkQuestionKnowledgePointsColumns[0]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tk_question_knowledge_points_tk_knowledge_point_id",
				Columns:    []*schema.Column{TkQuestionKnowledgePointsColumns[1]},
				RefColumns: []*schema.Column{TkKnowledgePointsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TkUserRandomExamRecodeRandomExamQuestionColumns holds the columns for the "tk_user_random_exam_recode_random_exam_question" table.
	TkUserRandomExamRecodeRandomExamQuestionColumns = []*schema.Column{
		{Name: "tk_user_random_exam_recode_id", Type: field.TypeInt},
		{Name: "tk_question_id", Type: field.TypeInt},
	}
	// TkUserRandomExamRecodeRandomExamQuestionTable holds the schema information for the "tk_user_random_exam_recode_random_exam_question" table.
	TkUserRandomExamRecodeRandomExamQuestionTable = &schema.Table{
		Name:       "tk_user_random_exam_recode_random_exam_question",
		Columns:    TkUserRandomExamRecodeRandomExamQuestionColumns,
		PrimaryKey: []*schema.Column{TkUserRandomExamRecodeRandomExamQuestionColumns[0], TkUserRandomExamRecodeRandomExamQuestionColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tk_user_random_exam_recode_random_exam_question_tk_user_random_exam_recode_id",
				Columns:    []*schema.Column{TkUserRandomExamRecodeRandomExamQuestionColumns[0]},
				RefColumns: []*schema.Column{TkUserRandomExamRecodesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tk_user_random_exam_recode_random_exam_question_tk_question_id",
				Columns:    []*schema.Column{TkUserRandomExamRecodeRandomExamQuestionColumns[1]},
				RefColumns: []*schema.Column{TkQuestionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserMessagesColumns holds the columns for the "user_messages" table.
	UserMessagesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "message_id", Type: field.TypeInt},
	}
	// UserMessagesTable holds the schema information for the "user_messages" table.
	UserMessagesTable = &schema.Table{
		Name:       "user_messages",
		Columns:    UserMessagesColumns,
		PrimaryKey: []*schema.Column{UserMessagesColumns[0], UserMessagesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_messages_user_id",
				Columns:    []*schema.Column{UserMessagesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_messages_message_id",
				Columns:    []*schema.Column{UserMessagesColumns[1]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		ActivityApplyInfosTable,
		ActivityTypesTable,
		AdminsTable,
		AdminLoginLogsTable,
		AdminOperationLogsTable,
		AdvertisesTable,
		AppAgreementsTable,
		AppVersionsTable,
		AttachmentsTable,
		CitiesTable,
		CollectionsTable,
		GroupCardsTable,
		HotSearchesTable,
		ImportTasksTable,
		InformationClassifiesTable,
		ItemCategoriesTable,
		KcClassesTable,
		KcClassTeachersTable,
		KcCoursesTable,
		KcCourseChaptersTable,
		KcCourseSectionsTable,
		KcCourseSmallCategoriesTable,
		KcCourseTeachersTable,
		KcCourseVideosTable,
		KcSmallCategoryAttachmentsTable,
		KcSmallCategoryExamPapersTable,
		KcSmallCategoryQuestionsTable,
		KcUserClassesTable,
		KcUserCoursesTable,
		KcVideoUploadTasksTable,
		LevelsTable,
		MajorsTable,
		MajorDetailsTable,
		MajorDetailTagsTable,
		MakeUserQuestionRecordsTable,
		MessagesTable,
		MessageTypesTable,
		PermissionsTable,
		RolesTable,
		RolePermissionsTable,
		SharePostersTable,
		TeachersTable,
		TeacherTagsTable,
		TkChaptersTable,
		TkExamPapersTable,
		TkExamPaperPartitionsTable,
		TkExamPaperPartitionScoresTable,
		TkExamPaperSimulationsTable,
		TkExamPartitionQuestionLinksTable,
		TkExamQuestionTypesTable,
		TkKnowledgePointsTable,
		TkQuestionsTable,
		TkQuestionAnswerOptionsTable,
		TkQuestionBanksTable,
		TkQuestionBankCitiesTable,
		TkQuestionBankMajorsTable,
		TkQuestionErrorFeedbacksTable,
		TkQuestionSectionsTable,
		TkSectionsTable,
		TkUserExamScoreRecordsTable,
		TkUserQuestionBankRecordsTable,
		TkUserQuestionRecordsTable,
		TkUserRandomExamRecodesTable,
		TkUserSimulationTeacherMarksTable,
		TkUserWrongQuestionRecodesTable,
		UsersTable,
		UserAskAnswersTable,
		UserAskAnswerAttachmentsTable,
		UserCourseAppraisesTable,
		UserLoginLogsTable,
		VideoRecordsTable,
		AdminRolesTable,
		AttachmentMajorTeacherAttachmentTable,
		AttachmentMajorServiceAttachmentTable,
		KcClassKcClassCoursesTable,
		MajorKcClassesTable,
		MajorCoursesTable,
		TeacherMajorsTable,
		TkQuestionKnowledgePointsTable,
		TkUserRandomExamRecodeRandomExamQuestionTable,
		UserMessagesTable,
	}
)

func init() {
	ActivitiesTable.ForeignKeys[0].RefTable = ActivityTypesTable
	ActivitiesTable.ForeignKeys[1].RefTable = AdminsTable
	ActivityApplyInfosTable.ForeignKeys[0].RefTable = ActivitiesTable
	AdminsTable.ForeignKeys[0].RefTable = AttachmentsTable
	AdminLoginLogsTable.ForeignKeys[0].RefTable = AdminsTable
	AdminOperationLogsTable.ForeignKeys[0].RefTable = AdminsTable
	AdvertisesTable.ForeignKeys[0].RefTable = AttachmentsTable
	CollectionsTable.ForeignKeys[0].RefTable = TkQuestionsTable
	GroupCardsTable.ForeignKeys[0].RefTable = AttachmentsTable
	ItemCategoriesTable.ForeignKeys[0].RefTable = ItemCategoriesTable
	KcClassesTable.ForeignKeys[0].RefTable = AdminsTable
	KcClassesTable.ForeignKeys[1].RefTable = AttachmentsTable
	KcClassesTable.ForeignKeys[2].RefTable = CitiesTable
	KcClassesTable.ForeignKeys[3].RefTable = ItemCategoriesTable
	KcClassesTable.ForeignKeys[4].RefTable = TeachersTable
	KcClassTeachersTable.ForeignKeys[0].RefTable = KcClassesTable
	KcClassTeachersTable.ForeignKeys[1].RefTable = TeachersTable
	KcCoursesTable.ForeignKeys[0].RefTable = AdminsTable
	KcCoursesTable.ForeignKeys[1].RefTable = AttachmentsTable
	KcCoursesTable.ForeignKeys[2].RefTable = CitiesTable
	KcCoursesTable.ForeignKeys[3].RefTable = ItemCategoriesTable
	KcCoursesTable.ForeignKeys[4].RefTable = TkQuestionBanksTable
	KcCourseChaptersTable.ForeignKeys[0].RefTable = KcCoursesTable
	KcCourseSectionsTable.ForeignKeys[0].RefTable = KcCourseChaptersTable
	KcCourseSmallCategoriesTable.ForeignKeys[0].RefTable = AttachmentsTable
	KcCourseSmallCategoriesTable.ForeignKeys[1].RefTable = AttachmentsTable
	KcCourseSmallCategoriesTable.ForeignKeys[2].RefTable = KcCoursesTable
	KcCourseSmallCategoriesTable.ForeignKeys[3].RefTable = KcCourseChaptersTable
	KcCourseSmallCategoriesTable.ForeignKeys[4].RefTable = KcCourseSectionsTable
	KcCourseTeachersTable.ForeignKeys[0].RefTable = KcCoursesTable
	KcCourseTeachersTable.ForeignKeys[1].RefTable = TeachersTable
	KcSmallCategoryAttachmentsTable.ForeignKeys[0].RefTable = AttachmentsTable
	KcSmallCategoryAttachmentsTable.ForeignKeys[1].RefTable = KcCourseSmallCategoriesTable
	KcSmallCategoryExamPapersTable.ForeignKeys[0].RefTable = KcCourseSmallCategoriesTable
	KcSmallCategoryExamPapersTable.ForeignKeys[1].RefTable = TkExamPapersTable
	KcSmallCategoryQuestionsTable.ForeignKeys[0].RefTable = KcCourseSmallCategoriesTable
	KcSmallCategoryQuestionsTable.ForeignKeys[1].RefTable = TkQuestionsTable
	KcUserClassesTable.ForeignKeys[0].RefTable = KcClassesTable
	KcUserClassesTable.ForeignKeys[1].RefTable = UsersTable
	KcUserCoursesTable.ForeignKeys[0].RefTable = KcCoursesTable
	KcUserCoursesTable.ForeignKeys[1].RefTable = UsersTable
	KcVideoUploadTasksTable.ForeignKeys[0].RefTable = AttachmentsTable
	MajorDetailsTable.ForeignKeys[0].RefTable = AttachmentsTable
	MajorDetailsTable.ForeignKeys[1].RefTable = AttachmentsTable
	MajorDetailsTable.ForeignKeys[2].RefTable = MajorsTable
	MajorDetailTagsTable.ForeignKeys[0].RefTable = MajorDetailsTable
	MakeUserQuestionRecordsTable.ForeignKeys[0].RefTable = TkExamPapersTable
	MakeUserQuestionRecordsTable.ForeignKeys[1].RefTable = TkSectionsTable
	MessagesTable.ForeignKeys[0].RefTable = AdminsTable
	MessagesTable.ForeignKeys[1].RefTable = AttachmentsTable
	MessagesTable.ForeignKeys[2].RefTable = KcClassesTable
	MessagesTable.ForeignKeys[3].RefTable = KcCoursesTable
	MessagesTable.ForeignKeys[4].RefTable = MessageTypesTable
	RolePermissionsTable.ForeignKeys[0].RefTable = RolesTable
	SharePostersTable.ForeignKeys[0].RefTable = AttachmentsTable
	TeachersTable.ForeignKeys[0].RefTable = AttachmentsTable
	TeacherTagsTable.ForeignKeys[0].RefTable = TeachersTable
	TkChaptersTable.ForeignKeys[0].RefTable = TkQuestionBanksTable
	TkExamPapersTable.ForeignKeys[0].RefTable = AdminsTable
	TkExamPapersTable.ForeignKeys[1].RefTable = TkQuestionBanksTable
	TkExamPaperPartitionsTable.ForeignKeys[0].RefTable = TkExamPapersTable
	TkExamPaperPartitionScoresTable.ForeignKeys[0].RefTable = TkExamPaperPartitionsTable
	TkExamPartitionQuestionLinksTable.ForeignKeys[0].RefTable = TkExamPaperPartitionsTable
	TkExamPartitionQuestionLinksTable.ForeignKeys[1].RefTable = TkQuestionsTable
	TkExamQuestionTypesTable.ForeignKeys[0].RefTable = TkQuestionBanksTable
	TkKnowledgePointsTable.ForeignKeys[0].RefTable = TkQuestionBanksTable
	TkQuestionsTable.ForeignKeys[0].RefTable = AdminsTable
	TkQuestionsTable.ForeignKeys[1].RefTable = TkQuestionsTable
	TkQuestionsTable.ForeignKeys[2].RefTable = TkQuestionBanksTable
	TkQuestionAnswerOptionsTable.ForeignKeys[0].RefTable = TkQuestionsTable
	TkQuestionBanksTable.ForeignKeys[0].RefTable = AdminsTable
	TkQuestionBanksTable.ForeignKeys[1].RefTable = ItemCategoriesTable
	TkQuestionBanksTable.ForeignKeys[2].RefTable = LevelsTable
	TkQuestionBankCitiesTable.ForeignKeys[0].RefTable = CitiesTable
	TkQuestionBankCitiesTable.ForeignKeys[1].RefTable = TkQuestionBanksTable
	TkQuestionBankMajorsTable.ForeignKeys[0].RefTable = MajorsTable
	TkQuestionBankMajorsTable.ForeignKeys[1].RefTable = TkQuestionBanksTable
	TkQuestionErrorFeedbacksTable.ForeignKeys[0].RefTable = AdminsTable
	TkQuestionErrorFeedbacksTable.ForeignKeys[1].RefTable = TkQuestionsTable
	TkQuestionSectionsTable.ForeignKeys[0].RefTable = TkQuestionsTable
	TkQuestionSectionsTable.ForeignKeys[1].RefTable = TkSectionsTable
	TkSectionsTable.ForeignKeys[0].RefTable = TkChaptersTable
	TkUserExamScoreRecordsTable.ForeignKeys[0].RefTable = TeachersTable
	TkUserExamScoreRecordsTable.ForeignKeys[1].RefTable = TkExamPapersTable
	TkUserExamScoreRecordsTable.ForeignKeys[2].RefTable = TkSectionsTable
	TkUserExamScoreRecordsTable.ForeignKeys[3].RefTable = UsersTable
	TkUserQuestionBankRecordsTable.ForeignKeys[0].RefTable = TkQuestionBanksTable
	TkUserQuestionBankRecordsTable.ForeignKeys[1].RefTable = UsersTable
	TkUserQuestionRecordsTable.ForeignKeys[0].RefTable = TkExamPapersTable
	TkUserQuestionRecordsTable.ForeignKeys[1].RefTable = TkQuestionsTable
	TkUserQuestionRecordsTable.ForeignKeys[2].RefTable = TkQuestionBanksTable
	TkUserQuestionRecordsTable.ForeignKeys[3].RefTable = TkSectionsTable
	TkUserQuestionRecordsTable.ForeignKeys[4].RefTable = UsersTable
	TkUserRandomExamRecodesTable.ForeignKeys[0].RefTable = TkExamPapersTable
	TkUserSimulationTeacherMarksTable.ForeignKeys[0].RefTable = TkQuestionsTable
	TkUserSimulationTeacherMarksTable.ForeignKeys[1].RefTable = TkUserExamScoreRecordsTable
	TkUserWrongQuestionRecodesTable.ForeignKeys[0].RefTable = TkQuestionsTable
	UsersTable.ForeignKeys[0].RefTable = CitiesTable
	UsersTable.ForeignKeys[1].RefTable = ItemCategoriesTable
	UserAskAnswersTable.ForeignKeys[0].RefTable = TeachersTable
	UserAskAnswersTable.ForeignKeys[1].RefTable = UsersTable
	UserAskAnswerAttachmentsTable.ForeignKeys[0].RefTable = AttachmentsTable
	UserAskAnswerAttachmentsTable.ForeignKeys[1].RefTable = UserAskAnswersTable
	UserCourseAppraisesTable.ForeignKeys[0].RefTable = KcCoursesTable
	UserCourseAppraisesTable.ForeignKeys[1].RefTable = KcCourseSmallCategoriesTable
	UserCourseAppraisesTable.ForeignKeys[2].RefTable = UsersTable
	UserLoginLogsTable.ForeignKeys[0].RefTable = UsersTable
	VideoRecordsTable.ForeignKeys[0].RefTable = KcCourseSmallCategoriesTable
	VideoRecordsTable.ForeignKeys[1].RefTable = UsersTable
	AdminRolesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[1].RefTable = RolesTable
	AttachmentMajorTeacherAttachmentTable.ForeignKeys[0].RefTable = AttachmentsTable
	AttachmentMajorTeacherAttachmentTable.ForeignKeys[1].RefTable = MajorDetailsTable
	AttachmentMajorServiceAttachmentTable.ForeignKeys[0].RefTable = AttachmentsTable
	AttachmentMajorServiceAttachmentTable.ForeignKeys[1].RefTable = MajorDetailsTable
	KcClassKcClassCoursesTable.ForeignKeys[0].RefTable = KcClassesTable
	KcClassKcClassCoursesTable.ForeignKeys[1].RefTable = KcCoursesTable
	MajorKcClassesTable.ForeignKeys[0].RefTable = MajorsTable
	MajorKcClassesTable.ForeignKeys[1].RefTable = KcClassesTable
	MajorCoursesTable.ForeignKeys[0].RefTable = MajorsTable
	MajorCoursesTable.ForeignKeys[1].RefTable = KcCoursesTable
	TeacherMajorsTable.ForeignKeys[0].RefTable = TeachersTable
	TeacherMajorsTable.ForeignKeys[1].RefTable = MajorsTable
	TkQuestionKnowledgePointsTable.ForeignKeys[0].RefTable = TkQuestionsTable
	TkQuestionKnowledgePointsTable.ForeignKeys[1].RefTable = TkKnowledgePointsTable
	TkUserRandomExamRecodeRandomExamQuestionTable.ForeignKeys[0].RefTable = TkUserRandomExamRecodesTable
	TkUserRandomExamRecodeRandomExamQuestionTable.ForeignKeys[1].RefTable = TkQuestionsTable
	UserMessagesTable.ForeignKeys[0].RefTable = UsersTable
	UserMessagesTable.ForeignKeys[1].RefTable = MessagesTable
}
