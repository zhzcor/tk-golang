// Code generated by entc, DO NOT EDIT.

package majordetail

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the majordetail type in the database.
	Label = "major_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldSubjectCount holds the string denoting the subject_count field in the database.
	FieldSubjectCount = "subject_count"
	// FieldStar holds the string denoting the star field in the database.
	FieldStar = "star"
	// FieldPassRate holds the string denoting the pass_rate field in the database.
	FieldPassRate = "pass_rate"
	// FieldStudentCount holds the string denoting the student_count field in the database.
	FieldStudentCount = "student_count"
	// FieldStudyDuration holds the string denoting the study_duration field in the database.
	FieldStudyDuration = "study_duration"
	// FieldMajorID holds the string denoting the major_id field in the database.
	FieldMajorID = "major_id"
	// FieldCoverImgID holds the string denoting the cover_img_id field in the database.
	FieldCoverImgID = "cover_img_id"
	// FieldSubjectImgID holds the string denoting the subject_img_id field in the database.
	FieldSubjectImgID = "subject_img_id"
	// EdgeMajorDetailTags holds the string denoting the major_detail_tags edge name in mutations.
	EdgeMajorDetailTags = "major_detail_tags"
	// EdgeCoverAttachment holds the string denoting the cover_attachment edge name in mutations.
	EdgeCoverAttachment = "cover_attachment"
	// EdgeSubjectAttachment holds the string denoting the subject_attachment edge name in mutations.
	EdgeSubjectAttachment = "subject_attachment"
	// EdgeTeacherAttachments holds the string denoting the teacher_attachments edge name in mutations.
	EdgeTeacherAttachments = "teacher_attachments"
	// EdgeServiceAttachments holds the string denoting the service_attachments edge name in mutations.
	EdgeServiceAttachments = "service_attachments"
	// EdgeMajor holds the string denoting the major edge name in mutations.
	EdgeMajor = "major"
	// Table holds the table name of the majordetail in the database.
	Table = "major_details"
	// MajorDetailTagsTable is the table the holds the major_detail_tags relation/edge.
	MajorDetailTagsTable = "major_detail_tags"
	// MajorDetailTagsInverseTable is the table name for the MajorDetailTag entity.
	// It exists in this package in order to avoid circular dependency with the "majordetailtag" package.
	MajorDetailTagsInverseTable = "major_detail_tags"
	// MajorDetailTagsColumn is the table column denoting the major_detail_tags relation/edge.
	MajorDetailTagsColumn = "major_detail_id"
	// CoverAttachmentTable is the table the holds the cover_attachment relation/edge.
	CoverAttachmentTable = "major_details"
	// CoverAttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	CoverAttachmentInverseTable = "attachments"
	// CoverAttachmentColumn is the table column denoting the cover_attachment relation/edge.
	CoverAttachmentColumn = "cover_img_id"
	// SubjectAttachmentTable is the table the holds the subject_attachment relation/edge.
	SubjectAttachmentTable = "major_details"
	// SubjectAttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	SubjectAttachmentInverseTable = "attachments"
	// SubjectAttachmentColumn is the table column denoting the subject_attachment relation/edge.
	SubjectAttachmentColumn = "subject_img_id"
	// TeacherAttachmentsTable is the table the holds the teacher_attachments relation/edge. The primary key declared below.
	TeacherAttachmentsTable = "attachment_major_teacher_attachment"
	// TeacherAttachmentsInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	TeacherAttachmentsInverseTable = "attachments"
	// ServiceAttachmentsTable is the table the holds the service_attachments relation/edge. The primary key declared below.
	ServiceAttachmentsTable = "attachment_major_service_attachment"
	// ServiceAttachmentsInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	ServiceAttachmentsInverseTable = "attachments"
	// MajorTable is the table the holds the major relation/edge.
	MajorTable = "major_details"
	// MajorInverseTable is the table name for the Major entity.
	// It exists in this package in order to avoid circular dependency with the "major" package.
	MajorInverseTable = "majors"
	// MajorColumn is the table column denoting the major relation/edge.
	MajorColumn = "major_id"
)

// Columns holds all SQL columns for majordetail fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldDesc,
	FieldSubjectCount,
	FieldStar,
	FieldPassRate,
	FieldStudentCount,
	FieldStudyDuration,
	FieldMajorID,
	FieldCoverImgID,
	FieldSubjectImgID,
}

var (
	// TeacherAttachmentsPrimaryKey and TeacherAttachmentsColumn2 are the table columns denoting the
	// primary key for the teacher_attachments relation (M2M).
	TeacherAttachmentsPrimaryKey = []string{"attachment_id", "major_detail_id"}
	// ServiceAttachmentsPrimaryKey and ServiceAttachmentsColumn2 are the table columns denoting the
	// primary key for the service_attachments relation (M2M).
	ServiceAttachmentsPrimaryKey = []string{"attachment_id", "major_detail_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultSubjectCount holds the default value on creation for the "subject_count" field.
	DefaultSubjectCount uint8
	// DefaultStar holds the default value on creation for the "star" field.
	DefaultStar string
	// DefaultPassRate holds the default value on creation for the "pass_rate" field.
	DefaultPassRate uint8
	// DefaultStudentCount holds the default value on creation for the "student_count" field.
	DefaultStudentCount uint32
	// DefaultStudyDuration holds the default value on creation for the "study_duration" field.
	DefaultStudyDuration uint8
)
