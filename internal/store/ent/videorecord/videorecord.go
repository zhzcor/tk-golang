// Code generated by entc, DO NOT EDIT.

package videorecord

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the videorecord type in the database.
	Label = "video_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldVideoName holds the string denoting the video_name field in the database.
	FieldVideoName = "video_name"
	// FieldViewTime holds the string denoting the view_time field in the database.
	FieldViewTime = "view_time"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldSmallID holds the string denoting the small_id field in the database.
	FieldSmallID = "small_id"
	// FieldVideoTime holds the string denoting the video_time field in the database.
	FieldVideoTime = "video_time"
	// FieldViewAt holds the string denoting the view_at field in the database.
	FieldViewAt = "view_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeSmallCourse holds the string denoting the small_course edge name in mutations.
	EdgeSmallCourse = "small_course"
	// Table holds the table name of the videorecord in the database.
	Table = "video_records"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "video_records"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// SmallCourseTable is the table the holds the small_course relation/edge.
	SmallCourseTable = "video_records"
	// SmallCourseInverseTable is the table name for the KcCourseSmallCategory entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursesmallcategory" package.
	SmallCourseInverseTable = "kc_course_small_categories"
	// SmallCourseColumn is the table column denoting the small_course relation/edge.
	SmallCourseColumn = "small_id"
)

// Columns holds all SQL columns for videorecord fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldVideoName,
	FieldViewTime,
	FieldUserID,
	FieldSmallID,
	FieldVideoTime,
	FieldViewAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultVideoName holds the default value on creation for the "video_name" field.
	DefaultVideoName string
	// DefaultViewAt holds the default value on creation for the "view_at" field.
	DefaultViewAt func() time.Time
)
