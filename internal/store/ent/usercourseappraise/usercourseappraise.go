// Code generated by entc, DO NOT EDIT.

package usercourseappraise

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the usercourseappraise type in the database.
	Label = "user_course_appraise"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldTeachAttitudeScore holds the string denoting the teach_attitude_score field in the database.
	FieldTeachAttitudeScore = "teach_attitude_score"
	// FieldTeachContentScore holds the string denoting the teach_content_score field in the database.
	FieldTeachContentScore = "teach_content_score"
	// FieldTeachAtmosphereScore holds the string denoting the teach_atmosphere_score field in the database.
	FieldTeachAtmosphereScore = "teach_atmosphere_score"
	// FieldCompositeScore holds the string denoting the composite_score field in the database.
	FieldCompositeScore = "composite_score"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldSmallCateID holds the string denoting the small_cate_id field in the database.
	FieldSmallCateID = "small_cate_id"
	// FieldCourseID holds the string denoting the course_id field in the database.
	FieldCourseID = "course_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldShowStatus holds the string denoting the show_status field in the database.
	FieldShowStatus = "show_status"
	// FieldTeacherImpression holds the string denoting the teacher_impression field in the database.
	FieldTeacherImpression = "teacher_impression"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldTeacherReply holds the string denoting the teacher_reply field in the database.
	FieldTeacherReply = "teacher_reply"
	// EdgeSmallCate holds the string denoting the small_cate edge name in mutations.
	EdgeSmallCate = "small_cate"
	// EdgeCourse holds the string denoting the course edge name in mutations.
	EdgeCourse = "course"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the usercourseappraise in the database.
	Table = "user_course_appraises"
	// SmallCateTable is the table the holds the small_cate relation/edge.
	SmallCateTable = "user_course_appraises"
	// SmallCateInverseTable is the table name for the KcCourseSmallCategory entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursesmallcategory" package.
	SmallCateInverseTable = "kc_course_small_categories"
	// SmallCateColumn is the table column denoting the small_cate relation/edge.
	SmallCateColumn = "small_cate_id"
	// CourseTable is the table the holds the course relation/edge.
	CourseTable = "user_course_appraises"
	// CourseInverseTable is the table name for the KcCourse entity.
	// It exists in this package in order to avoid circular dependency with the "kccourse" package.
	CourseInverseTable = "kc_courses"
	// CourseColumn is the table column denoting the course relation/edge.
	CourseColumn = "course_id"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "user_course_appraises"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for usercourseappraise fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldTeachAttitudeScore,
	FieldTeachContentScore,
	FieldTeachAtmosphereScore,
	FieldCompositeScore,
	FieldUserID,
	FieldSmallCateID,
	FieldCourseID,
	FieldType,
	FieldShowStatus,
	FieldTeacherImpression,
	FieldDesc,
	FieldTeacherReply,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultTeachAttitudeScore holds the default value on creation for the "teach_attitude_score" field.
	DefaultTeachAttitudeScore float64
	// DefaultTeachContentScore holds the default value on creation for the "teach_content_score" field.
	DefaultTeachContentScore float64
	// DefaultTeachAtmosphereScore holds the default value on creation for the "teach_atmosphere_score" field.
	DefaultTeachAtmosphereScore float64
	// DefaultCompositeScore holds the default value on creation for the "composite_score" field.
	DefaultCompositeScore float64
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType uint8
	// DefaultShowStatus holds the default value on creation for the "show_status" field.
	DefaultShowStatus uint8
	// DefaultTeacherImpression holds the default value on creation for the "teacher_impression" field.
	DefaultTeacherImpression string
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DefaultTeacherReply holds the default value on creation for the "teacher_reply" field.
	DefaultTeacherReply string
)
