// Code generated by entc, DO NOT EDIT.

package tksection

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tksection type in the database.
	Label = "tk_section"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldChapterID holds the string denoting the chapter_id field in the database.
	FieldChapterID = "chapter_id"
	// FieldQuestionCount holds the string denoting the question_count field in the database.
	FieldQuestionCount = "question_count"
	// EdgeChapter holds the string denoting the chapter edge name in mutations.
	EdgeChapter = "chapter"
	// EdgeTkSectionLinks holds the string denoting the tk_section_links edge name in mutations.
	EdgeTkSectionLinks = "tk_section_links"
	// EdgeSectionRecords holds the string denoting the section_records edge name in mutations.
	EdgeSectionRecords = "section_records"
	// EdgeUserSectionExam holds the string denoting the user_section_exam edge name in mutations.
	EdgeUserSectionExam = "user_section_exam"
	// EdgeMakeUserQuestionSec holds the string denoting the make_user_question_sec edge name in mutations.
	EdgeMakeUserQuestionSec = "make_user_question_sec"
	// Table holds the table name of the tksection in the database.
	Table = "tk_sections"
	// ChapterTable is the table the holds the chapter relation/edge.
	ChapterTable = "tk_sections"
	// ChapterInverseTable is the table name for the TkChapter entity.
	// It exists in this package in order to avoid circular dependency with the "tkchapter" package.
	ChapterInverseTable = "tk_chapters"
	// ChapterColumn is the table column denoting the chapter relation/edge.
	ChapterColumn = "chapter_id"
	// TkSectionLinksTable is the table the holds the tk_section_links relation/edge.
	TkSectionLinksTable = "tk_question_sections"
	// TkSectionLinksInverseTable is the table name for the TkQuestionSection entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionsection" package.
	TkSectionLinksInverseTable = "tk_question_sections"
	// TkSectionLinksColumn is the table column denoting the tk_section_links relation/edge.
	TkSectionLinksColumn = "section_id"
	// SectionRecordsTable is the table the holds the section_records relation/edge.
	SectionRecordsTable = "tk_user_question_records"
	// SectionRecordsInverseTable is the table name for the TkUserQuestionRecord entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserquestionrecord" package.
	SectionRecordsInverseTable = "tk_user_question_records"
	// SectionRecordsColumn is the table column denoting the section_records relation/edge.
	SectionRecordsColumn = "section_id"
	// UserSectionExamTable is the table the holds the user_section_exam relation/edge.
	UserSectionExamTable = "tk_user_exam_score_records"
	// UserSectionExamInverseTable is the table name for the TkUserExamScoreRecord entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserexamscorerecord" package.
	UserSectionExamInverseTable = "tk_user_exam_score_records"
	// UserSectionExamColumn is the table column denoting the user_section_exam relation/edge.
	UserSectionExamColumn = "section_id"
	// MakeUserQuestionSecTable is the table the holds the make_user_question_sec relation/edge.
	MakeUserQuestionSecTable = "make_user_question_records"
	// MakeUserQuestionSecInverseTable is the table name for the MakeUserQuestionRecord entity.
	// It exists in this package in order to avoid circular dependency with the "makeuserquestionrecord" package.
	MakeUserQuestionSecInverseTable = "make_user_question_records"
	// MakeUserQuestionSecColumn is the table column denoting the make_user_question_sec relation/edge.
	MakeUserQuestionSecColumn = "sec_id"
)

// Columns holds all SQL columns for tksection fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldChapterID,
	FieldQuestionCount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultQuestionCount holds the default value on creation for the "question_count" field.
	DefaultQuestionCount int
)
