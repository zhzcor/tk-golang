// Code generated by entc, DO NOT EDIT.

package tkquestionbankcity

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tkquestionbankcity type in the database.
	Label = "tk_question_bank_city"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCityID holds the string denoting the city_id field in the database.
	FieldCityID = "city_id"
	// FieldQuestionBankID holds the string denoting the question_bank_id field in the database.
	FieldQuestionBankID = "question_bank_id"
	// EdgeTkQuestionBank holds the string denoting the tk_question_bank edge name in mutations.
	EdgeTkQuestionBank = "tk_question_bank"
	// EdgeCity holds the string denoting the city edge name in mutations.
	EdgeCity = "city"
	// Table holds the table name of the tkquestionbankcity in the database.
	Table = "tk_question_bank_cities"
	// TkQuestionBankTable is the table the holds the tk_question_bank relation/edge.
	TkQuestionBankTable = "tk_question_bank_cities"
	// TkQuestionBankInverseTable is the table name for the TkQuestionBank entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionbank" package.
	TkQuestionBankInverseTable = "tk_question_banks"
	// TkQuestionBankColumn is the table column denoting the tk_question_bank relation/edge.
	TkQuestionBankColumn = "question_bank_id"
	// CityTable is the table the holds the city relation/edge.
	CityTable = "tk_question_bank_cities"
	// CityInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CityInverseTable = "cities"
	// CityColumn is the table column denoting the city relation/edge.
	CityColumn = "city_id"
)

// Columns holds all SQL columns for tkquestionbankcity fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCityID,
	FieldQuestionBankID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
