// Code generated by entc, DO NOT EDIT.

package tkuserquestionbankrecord

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tkuserquestionbankrecord type in the database.
	Label = "tk_user_question_bank_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldRecordCount holds the string denoting the record_count field in the database.
	FieldRecordCount = "record_count"
	// FieldCorrectCount holds the string denoting the correct_count field in the database.
	FieldCorrectCount = "correct_count"
	// FieldWrongCount holds the string denoting the wrong_count field in the database.
	FieldWrongCount = "wrong_count"
	// FieldCorrectRate holds the string denoting the correct_rate field in the database.
	FieldCorrectRate = "correct_rate"
	// FieldFinishRate holds the string denoting the finish_rate field in the database.
	FieldFinishRate = "finish_rate"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldQuestionBankID holds the string denoting the question_bank_id field in the database.
	FieldQuestionBankID = "question_bank_id"
	// EdgeQuestionBank holds the string denoting the question_bank edge name in mutations.
	EdgeQuestionBank = "question_bank"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the tkuserquestionbankrecord in the database.
	Table = "tk_user_question_bank_records"
	// QuestionBankTable is the table the holds the question_bank relation/edge.
	QuestionBankTable = "tk_user_question_bank_records"
	// QuestionBankInverseTable is the table name for the TkQuestionBank entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionbank" package.
	QuestionBankInverseTable = "tk_question_banks"
	// QuestionBankColumn is the table column denoting the question_bank relation/edge.
	QuestionBankColumn = "question_bank_id"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "tk_user_question_bank_records"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
)

// Columns holds all SQL columns for tkuserquestionbankrecord fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldRecordCount,
	FieldCorrectCount,
	FieldWrongCount,
	FieldCorrectRate,
	FieldFinishRate,
	FieldUserID,
	FieldQuestionBankID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultRecordCount holds the default value on creation for the "record_count" field.
	DefaultRecordCount int
	// DefaultCorrectCount holds the default value on creation for the "correct_count" field.
	DefaultCorrectCount int
	// DefaultWrongCount holds the default value on creation for the "wrong_count" field.
	DefaultWrongCount int
	// DefaultCorrectRate holds the default value on creation for the "correct_rate" field.
	DefaultCorrectRate float64
	// DefaultFinishRate holds the default value on creation for the "finish_rate" field.
	DefaultFinishRate float64
)
