// Code generated by entc, DO NOT EDIT.

package tkusersimulationteachermark

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tkusersimulationteachermark type in the database.
	Label = "tk_user_simulation_teacher_mark"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldScore holds the string denoting the score field in the database.
	FieldScore = "score"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldQuestionID holds the string denoting the question_id field in the database.
	FieldQuestionID = "question_id"
	// FieldUserExamRecordID holds the string denoting the user_exam_record_id field in the database.
	FieldUserExamRecordID = "user_exam_record_id"
	// EdgeQuestion holds the string denoting the question edge name in mutations.
	EdgeQuestion = "question"
	// EdgeUserExamRecord holds the string denoting the user_exam_record edge name in mutations.
	EdgeUserExamRecord = "user_exam_record"
	// Table holds the table name of the tkusersimulationteachermark in the database.
	Table = "tk_user_simulation_teacher_marks"
	// QuestionTable is the table the holds the question relation/edge.
	QuestionTable = "tk_user_simulation_teacher_marks"
	// QuestionInverseTable is the table name for the TkQuestion entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestion" package.
	QuestionInverseTable = "tk_questions"
	// QuestionColumn is the table column denoting the question relation/edge.
	QuestionColumn = "question_id"
	// UserExamRecordTable is the table the holds the user_exam_record relation/edge.
	UserExamRecordTable = "tk_user_simulation_teacher_marks"
	// UserExamRecordInverseTable is the table name for the TkUserExamScoreRecord entity.
	// It exists in this package in order to avoid circular dependency with the "tkuserexamscorerecord" package.
	UserExamRecordInverseTable = "tk_user_exam_score_records"
	// UserExamRecordColumn is the table column denoting the user_exam_record relation/edge.
	UserExamRecordColumn = "user_exam_record_id"
)

// Columns holds all SQL columns for tkusersimulationteachermark fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldScore,
	FieldDesc,
	FieldQuestionID,
	FieldUserExamRecordID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultScore holds the default value on creation for the "score" field.
	DefaultScore uint8
)
