// Code generated by entc, DO NOT EDIT.

package activityapplyinfo

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the activityapplyinfo type in the database.
	Label = "activity_apply_info"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldIsOurStudent holds the string denoting the is_our_student field in the database.
	FieldIsOurStudent = "is_our_student"
	// FieldActivityID holds the string denoting the activity_id field in the database.
	FieldActivityID = "activity_id"
	// EdgeActivity holds the string denoting the activity edge name in mutations.
	EdgeActivity = "activity"
	// Table holds the table name of the activityapplyinfo in the database.
	Table = "activity_apply_infos"
	// ActivityTable is the table the holds the activity relation/edge.
	ActivityTable = "activity_apply_infos"
	// ActivityInverseTable is the table name for the Activity entity.
	// It exists in this package in order to avoid circular dependency with the "activity" package.
	ActivityInverseTable = "activities"
	// ActivityColumn is the table column denoting the activity relation/edge.
	ActivityColumn = "activity_id"
)

// Columns holds all SQL columns for activityapplyinfo fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldPhone,
	FieldRemark,
	FieldIsOurStudent,
	FieldActivityID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultPhone holds the default value on creation for the "phone" field.
	DefaultPhone string
	// DefaultRemark holds the default value on creation for the "remark" field.
	DefaultRemark string
	// DefaultIsOurStudent holds the default value on creation for the "is_our_student" field.
	DefaultIsOurStudent uint8
)
