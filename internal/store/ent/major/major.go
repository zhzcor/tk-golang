// Code generated by entc, DO NOT EDIT.

package major

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the major type in the database.
	Label = "major"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldSortOrder holds the string denoting the sort_order field in the database.
	FieldSortOrder = "sort_order"
	// EdgeTeachers holds the string denoting the teachers edge name in mutations.
	EdgeTeachers = "teachers"
	// EdgeMajorDetail holds the string denoting the major_detail edge name in mutations.
	EdgeMajorDetail = "major_detail"
	// EdgeKcClasses holds the string denoting the kc_classes edge name in mutations.
	EdgeKcClasses = "kc_classes"
	// EdgeCourses holds the string denoting the courses edge name in mutations.
	EdgeCourses = "courses"
	// EdgeQuestionBankMajors holds the string denoting the question_bank_majors edge name in mutations.
	EdgeQuestionBankMajors = "question_bank_majors"
	// Table holds the table name of the major in the database.
	Table = "majors"
	// TeachersTable is the table the holds the teachers relation/edge. The primary key declared below.
	TeachersTable = "teacher_majors"
	// TeachersInverseTable is the table name for the Teacher entity.
	// It exists in this package in order to avoid circular dependency with the "teacher" package.
	TeachersInverseTable = "teachers"
	// MajorDetailTable is the table the holds the major_detail relation/edge.
	MajorDetailTable = "major_details"
	// MajorDetailInverseTable is the table name for the MajorDetail entity.
	// It exists in this package in order to avoid circular dependency with the "majordetail" package.
	MajorDetailInverseTable = "major_details"
	// MajorDetailColumn is the table column denoting the major_detail relation/edge.
	MajorDetailColumn = "major_id"
	// KcClassesTable is the table the holds the kc_classes relation/edge. The primary key declared below.
	KcClassesTable = "major_kc_classes"
	// KcClassesInverseTable is the table name for the KcClass entity.
	// It exists in this package in order to avoid circular dependency with the "kcclass" package.
	KcClassesInverseTable = "kc_classes"
	// CoursesTable is the table the holds the courses relation/edge. The primary key declared below.
	CoursesTable = "major_courses"
	// CoursesInverseTable is the table name for the KcCourse entity.
	// It exists in this package in order to avoid circular dependency with the "kccourse" package.
	CoursesInverseTable = "kc_courses"
	// QuestionBankMajorsTable is the table the holds the question_bank_majors relation/edge.
	QuestionBankMajorsTable = "tk_question_bank_majors"
	// QuestionBankMajorsInverseTable is the table name for the TkQuestionBankMajor entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionbankmajor" package.
	QuestionBankMajorsInverseTable = "tk_question_bank_majors"
	// QuestionBankMajorsColumn is the table column denoting the question_bank_majors relation/edge.
	QuestionBankMajorsColumn = "major_id"
)

// Columns holds all SQL columns for major fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldStatus,
	FieldCode,
	FieldDesc,
	FieldSortOrder,
}

var (
	// TeachersPrimaryKey and TeachersColumn2 are the table columns denoting the
	// primary key for the teachers relation (M2M).
	TeachersPrimaryKey = []string{"teacher_id", "major_id"}
	// KcClassesPrimaryKey and KcClassesColumn2 are the table columns denoting the
	// primary key for the kc_classes relation (M2M).
	KcClassesPrimaryKey = []string{"major_id", "kc_class_id"}
	// CoursesPrimaryKey and CoursesColumn2 are the table columns denoting the
	// primary key for the courses relation (M2M).
	CoursesPrimaryKey = []string{"major_id", "kc_course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
	// DefaultCode holds the default value on creation for the "code" field.
	DefaultCode string
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DefaultSortOrder holds the default value on creation for the "sort_order" field.
	DefaultSortOrder int
)
