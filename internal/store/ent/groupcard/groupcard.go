// Code generated by entc, DO NOT EDIT.

package groupcard

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the groupcard type in the database.
	Label = "group_card"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSubTitle holds the string denoting the sub_title field in the database.
	FieldSubTitle = "sub_title"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldSortOrder holds the string denoting the sort_order field in the database.
	FieldSortOrder = "sort_order"
	// FieldAttachmentID holds the string denoting the attachment_id field in the database.
	FieldAttachmentID = "attachment_id"
	// EdgeAttachment holds the string denoting the attachment edge name in mutations.
	EdgeAttachment = "attachment"
	// Table holds the table name of the groupcard in the database.
	Table = "group_cards"
	// AttachmentTable is the table the holds the attachment relation/edge.
	AttachmentTable = "group_cards"
	// AttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	AttachmentInverseTable = "attachments"
	// AttachmentColumn is the table column denoting the attachment relation/edge.
	AttachmentColumn = "attachment_id"
)

// Columns holds all SQL columns for groupcard fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldTitle,
	FieldSubTitle,
	FieldStatus,
	FieldDesc,
	FieldSortOrder,
	FieldAttachmentID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultSubTitle holds the default value on creation for the "sub_title" field.
	DefaultSubTitle string
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DefaultSortOrder holds the default value on creation for the "sort_order" field.
	DefaultSortOrder int
)
