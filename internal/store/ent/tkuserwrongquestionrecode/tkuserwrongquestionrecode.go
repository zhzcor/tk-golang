// Code generated by entc, DO NOT EDIT.

package tkuserwrongquestionrecode

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the tkuserwrongquestionrecode type in the database.
	Label = "tk_user_wrong_question_recode"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldQuestionID holds the string denoting the question_id field in the database.
	FieldQuestionID = "question_id"
	// FieldQuestionBankID holds the string denoting the question_bank_id field in the database.
	FieldQuestionBankID = "question_bank_id"
	// FieldAnswer holds the string denoting the answer field in the database.
	FieldAnswer = "answer"
	// FieldWrongExamType holds the string denoting the wrong_exam_type field in the database.
	FieldWrongExamType = "wrong_exam_type"
	// FieldWrongQuestionType holds the string denoting the wrong_question_type field in the database.
	FieldWrongQuestionType = "wrong_question_type"
	// EdgeQuestionWrong holds the string denoting the question_wrong edge name in mutations.
	EdgeQuestionWrong = "question_wrong"
	// Table holds the table name of the tkuserwrongquestionrecode in the database.
	Table = "tk_user_wrong_question_recodes"
	// QuestionWrongTable is the table the holds the question_wrong relation/edge.
	QuestionWrongTable = "tk_user_wrong_question_recodes"
	// QuestionWrongInverseTable is the table name for the TkQuestion entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestion" package.
	QuestionWrongInverseTable = "tk_questions"
	// QuestionWrongColumn is the table column denoting the question_wrong relation/edge.
	QuestionWrongColumn = "question_id"
)

// Columns holds all SQL columns for tkuserwrongquestionrecode fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldUserID,
	FieldQuestionID,
	FieldQuestionBankID,
	FieldAnswer,
	FieldWrongExamType,
	FieldWrongQuestionType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "tkserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultWrongExamType holds the default value on creation for the "wrong_exam_type" field.
	DefaultWrongExamType int
	// DefaultWrongQuestionType holds the default value on creation for the "wrong_question_type" field.
	DefaultWrongQuestionType int
)
