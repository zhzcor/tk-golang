// Code generated by entc, DO NOT EDIT.

package kccourse

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the kccourse type in the database.
	Label = "kc_course"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldCourseName holds the string denoting the course_name field in the database.
	FieldCourseName = "course_name"
	// FieldCourseType holds the string denoting the course_type field in the database.
	FieldCourseType = "course_type"
	// FieldPeopleNum holds the string denoting the people_num field in the database.
	FieldPeopleNum = "people_num"
	// FieldCoursePrice holds the string denoting the course_price field in the database.
	FieldCoursePrice = "course_price"
	// FieldCourseDesc holds the string denoting the course_desc field in the database.
	FieldCourseDesc = "course_desc"
	// FieldPushStatus holds the string denoting the push_status field in the database.
	FieldPushStatus = "push_status"
	// FieldCateID holds the string denoting the cate_id field in the database.
	FieldCateID = "cate_id"
	// FieldCityID holds the string denoting the city_id field in the database.
	FieldCityID = "city_id"
	// FieldQuestionBankID holds the string denoting the question_bank_id field in the database.
	FieldQuestionBankID = "question_bank_id"
	// FieldCourseCoverImgID holds the string denoting the course_cover_img_id field in the database.
	FieldCourseCoverImgID = "course_cover_img_id"
	// FieldCreatedAdminID holds the string denoting the created_admin_id field in the database.
	FieldCreatedAdminID = "created_admin_id"
	// EdgeMajor holds the string denoting the major edge name in mutations.
	EdgeMajor = "major"
	// EdgeItem holds the string denoting the item edge name in mutations.
	EdgeItem = "item"
	// EdgeCity holds the string denoting the city edge name in mutations.
	EdgeCity = "city"
	// EdgeAdmin holds the string denoting the admin edge name in mutations.
	EdgeAdmin = "admin"
	// EdgeQuestionBank holds the string denoting the question_bank edge name in mutations.
	EdgeQuestionBank = "question_bank"
	// EdgeAttachment holds the string denoting the attachment edge name in mutations.
	EdgeAttachment = "attachment"
	// EdgeCourseTeachers holds the string denoting the course_teachers edge name in mutations.
	EdgeCourseTeachers = "course_teachers"
	// EdgeClasses holds the string denoting the classes edge name in mutations.
	EdgeClasses = "classes"
	// EdgeCourseSmallCategorys holds the string denoting the course_small_categorys edge name in mutations.
	EdgeCourseSmallCategorys = "course_small_categorys"
	// EdgeCourseAppraise holds the string denoting the course_appraise edge name in mutations.
	EdgeCourseAppraise = "course_appraise"
	// EdgeCourseChapters holds the string denoting the course_chapters edge name in mutations.
	EdgeCourseChapters = "course_chapters"
	// EdgeKcUserCourses holds the string denoting the kc_user_courses edge name in mutations.
	EdgeKcUserCourses = "kc_user_courses"
	// EdgeMessageCourses holds the string denoting the message_courses edge name in mutations.
	EdgeMessageCourses = "message_courses"
	// Table holds the table name of the kccourse in the database.
	Table = "kc_courses"
	// MajorTable is the table the holds the major relation/edge. The primary key declared below.
	MajorTable = "major_courses"
	// MajorInverseTable is the table name for the Major entity.
	// It exists in this package in order to avoid circular dependency with the "major" package.
	MajorInverseTable = "majors"
	// ItemTable is the table the holds the item relation/edge.
	ItemTable = "kc_courses"
	// ItemInverseTable is the table name for the ItemCategory entity.
	// It exists in this package in order to avoid circular dependency with the "itemcategory" package.
	ItemInverseTable = "item_categories"
	// ItemColumn is the table column denoting the item relation/edge.
	ItemColumn = "cate_id"
	// CityTable is the table the holds the city relation/edge.
	CityTable = "kc_courses"
	// CityInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CityInverseTable = "cities"
	// CityColumn is the table column denoting the city relation/edge.
	CityColumn = "city_id"
	// AdminTable is the table the holds the admin relation/edge.
	AdminTable = "kc_courses"
	// AdminInverseTable is the table name for the Admin entity.
	// It exists in this package in order to avoid circular dependency with the "admin" package.
	AdminInverseTable = "admins"
	// AdminColumn is the table column denoting the admin relation/edge.
	AdminColumn = "created_admin_id"
	// QuestionBankTable is the table the holds the question_bank relation/edge.
	QuestionBankTable = "kc_courses"
	// QuestionBankInverseTable is the table name for the TkQuestionBank entity.
	// It exists in this package in order to avoid circular dependency with the "tkquestionbank" package.
	QuestionBankInverseTable = "tk_question_banks"
	// QuestionBankColumn is the table column denoting the question_bank relation/edge.
	QuestionBankColumn = "question_bank_id"
	// AttachmentTable is the table the holds the attachment relation/edge.
	AttachmentTable = "kc_courses"
	// AttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	AttachmentInverseTable = "attachments"
	// AttachmentColumn is the table column denoting the attachment relation/edge.
	AttachmentColumn = "course_cover_img_id"
	// CourseTeachersTable is the table the holds the course_teachers relation/edge.
	CourseTeachersTable = "kc_course_teachers"
	// CourseTeachersInverseTable is the table name for the KcCourseTeacher entity.
	// It exists in this package in order to avoid circular dependency with the "kccourseteacher" package.
	CourseTeachersInverseTable = "kc_course_teachers"
	// CourseTeachersColumn is the table column denoting the course_teachers relation/edge.
	CourseTeachersColumn = "course_id"
	// ClassesTable is the table the holds the classes relation/edge. The primary key declared below.
	ClassesTable = "kc_class_kc_class_courses"
	// ClassesInverseTable is the table name for the KcClass entity.
	// It exists in this package in order to avoid circular dependency with the "kcclass" package.
	ClassesInverseTable = "kc_classes"
	// CourseSmallCategorysTable is the table the holds the course_small_categorys relation/edge.
	CourseSmallCategorysTable = "kc_course_small_categories"
	// CourseSmallCategorysInverseTable is the table name for the KcCourseSmallCategory entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursesmallcategory" package.
	CourseSmallCategorysInverseTable = "kc_course_small_categories"
	// CourseSmallCategorysColumn is the table column denoting the course_small_categorys relation/edge.
	CourseSmallCategorysColumn = "course_id"
	// CourseAppraiseTable is the table the holds the course_appraise relation/edge.
	CourseAppraiseTable = "user_course_appraises"
	// CourseAppraiseInverseTable is the table name for the UserCourseAppraise entity.
	// It exists in this package in order to avoid circular dependency with the "usercourseappraise" package.
	CourseAppraiseInverseTable = "user_course_appraises"
	// CourseAppraiseColumn is the table column denoting the course_appraise relation/edge.
	CourseAppraiseColumn = "course_id"
	// CourseChaptersTable is the table the holds the course_chapters relation/edge.
	CourseChaptersTable = "kc_course_chapters"
	// CourseChaptersInverseTable is the table name for the KcCourseChapter entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursechapter" package.
	CourseChaptersInverseTable = "kc_course_chapters"
	// CourseChaptersColumn is the table column denoting the course_chapters relation/edge.
	CourseChaptersColumn = "course_id"
	// KcUserCoursesTable is the table the holds the kc_user_courses relation/edge.
	KcUserCoursesTable = "kc_user_courses"
	// KcUserCoursesInverseTable is the table name for the KcUserCourse entity.
	// It exists in this package in order to avoid circular dependency with the "kcusercourse" package.
	KcUserCoursesInverseTable = "kc_user_courses"
	// KcUserCoursesColumn is the table column denoting the kc_user_courses relation/edge.
	KcUserCoursesColumn = "course_id"
	// MessageCoursesTable is the table the holds the message_courses relation/edge.
	MessageCoursesTable = "messages"
	// MessageCoursesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessageCoursesInverseTable = "messages"
	// MessageCoursesColumn is the table column denoting the message_courses relation/edge.
	MessageCoursesColumn = "course_id"
)

// Columns holds all SQL columns for kccourse fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldCourseName,
	FieldCourseType,
	FieldPeopleNum,
	FieldCoursePrice,
	FieldCourseDesc,
	FieldPushStatus,
	FieldCateID,
	FieldCityID,
	FieldQuestionBankID,
	FieldCourseCoverImgID,
	FieldCreatedAdminID,
}

var (
	// MajorPrimaryKey and MajorColumn2 are the table columns denoting the
	// primary key for the major relation (M2M).
	MajorPrimaryKey = []string{"major_id", "kc_course_id"}
	// ClassesPrimaryKey and ClassesColumn2 are the table columns denoting the
	// primary key for the classes relation (M2M).
	ClassesPrimaryKey = []string{"kc_class_id", "kc_course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCourseName holds the default value on creation for the "course_name" field.
	DefaultCourseName string
	// DefaultCourseType holds the default value on creation for the "course_type" field.
	DefaultCourseType uint8
	// DefaultPeopleNum holds the default value on creation for the "people_num" field.
	DefaultPeopleNum int
	// DefaultCoursePrice holds the default value on creation for the "course_price" field.
	DefaultCoursePrice float64
	// DefaultCourseDesc holds the default value on creation for the "course_desc" field.
	DefaultCourseDesc string
	// DefaultPushStatus holds the default value on creation for the "push_status" field.
	DefaultPushStatus uint8
)
