// Code generated by entc, DO NOT EDIT.

package kcclass

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the kcclass type in the database.
	Label = "kc_class"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldClassTitle holds the string denoting the class_title field in the database.
	FieldClassTitle = "class_title"
	// FieldClassCode holds the string denoting the class_code field in the database.
	FieldClassCode = "class_code"
	// FieldClassDesc holds the string denoting the class_desc field in the database.
	FieldClassDesc = "class_desc"
	// FieldIsDisplay holds the string denoting the is_display field in the database.
	FieldIsDisplay = "is_display"
	// FieldIsBuy holds the string denoting the is_buy field in the database.
	FieldIsBuy = "is_buy"
	// FieldClassPeriodType holds the string denoting the class_period_type field in the database.
	FieldClassPeriodType = "class_period_type"
	// FieldClassStartDate holds the string denoting the class_start_date field in the database.
	FieldClassStartDate = "class_start_date"
	// FieldClassEndDate holds the string denoting the class_end_date field in the database.
	FieldClassEndDate = "class_end_date"
	// FieldClosingDate holds the string denoting the closing_date field in the database.
	FieldClosingDate = "closing_date"
	// FieldDaysValidity holds the string denoting the days_validity field in the database.
	FieldDaysValidity = "days_validity"
	// FieldClassHeadMasterID holds the string denoting the class_head_master_id field in the database.
	FieldClassHeadMasterID = "class_head_master_id"
	// FieldClassCoverImgID holds the string denoting the class_cover_img_id field in the database.
	FieldClassCoverImgID = "class_cover_img_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldStudentCount holds the string denoting the student_count field in the database.
	FieldStudentCount = "student_count"
	// FieldCourseCount holds the string denoting the course_count field in the database.
	FieldCourseCount = "course_count"
	// FieldCateID holds the string denoting the cate_id field in the database.
	FieldCateID = "cate_id"
	// FieldCityID holds the string denoting the city_id field in the database.
	FieldCityID = "city_id"
	// FieldCreatedAdminID holds the string denoting the created_admin_id field in the database.
	FieldCreatedAdminID = "created_admin_id"
	// EdgeMajors holds the string denoting the majors edge name in mutations.
	EdgeMajors = "majors"
	// EdgeItem holds the string denoting the item edge name in mutations.
	EdgeItem = "item"
	// EdgeCity holds the string denoting the city edge name in mutations.
	EdgeCity = "city"
	// EdgeAdmin holds the string denoting the admin edge name in mutations.
	EdgeAdmin = "admin"
	// EdgeAttachment holds the string denoting the attachment edge name in mutations.
	EdgeAttachment = "attachment"
	// EdgeMasterTeachers holds the string denoting the master_teachers edge name in mutations.
	EdgeMasterTeachers = "master_teachers"
	// EdgeClassTeachers holds the string denoting the class_teachers edge name in mutations.
	EdgeClassTeachers = "class_teachers"
	// EdgeKcClassCourses holds the string denoting the kc_class_courses edge name in mutations.
	EdgeKcClassCourses = "kc_class_courses"
	// EdgeKcUserClasses holds the string denoting the kc_user_classes edge name in mutations.
	EdgeKcUserClasses = "kc_user_classes"
	// EdgeMessageClasses holds the string denoting the message_classes edge name in mutations.
	EdgeMessageClasses = "message_classes"
	// Table holds the table name of the kcclass in the database.
	Table = "kc_classes"
	// MajorsTable is the table the holds the majors relation/edge. The primary key declared below.
	MajorsTable = "major_kc_classes"
	// MajorsInverseTable is the table name for the Major entity.
	// It exists in this package in order to avoid circular dependency with the "major" package.
	MajorsInverseTable = "majors"
	// ItemTable is the table the holds the item relation/edge.
	ItemTable = "kc_classes"
	// ItemInverseTable is the table name for the ItemCategory entity.
	// It exists in this package in order to avoid circular dependency with the "itemcategory" package.
	ItemInverseTable = "item_categories"
	// ItemColumn is the table column denoting the item relation/edge.
	ItemColumn = "cate_id"
	// CityTable is the table the holds the city relation/edge.
	CityTable = "kc_classes"
	// CityInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CityInverseTable = "cities"
	// CityColumn is the table column denoting the city relation/edge.
	CityColumn = "city_id"
	// AdminTable is the table the holds the admin relation/edge.
	AdminTable = "kc_classes"
	// AdminInverseTable is the table name for the Admin entity.
	// It exists in this package in order to avoid circular dependency with the "admin" package.
	AdminInverseTable = "admins"
	// AdminColumn is the table column denoting the admin relation/edge.
	AdminColumn = "created_admin_id"
	// AttachmentTable is the table the holds the attachment relation/edge.
	AttachmentTable = "kc_classes"
	// AttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	AttachmentInverseTable = "attachments"
	// AttachmentColumn is the table column denoting the attachment relation/edge.
	AttachmentColumn = "class_cover_img_id"
	// MasterTeachersTable is the table the holds the master_teachers relation/edge.
	MasterTeachersTable = "kc_classes"
	// MasterTeachersInverseTable is the table name for the Teacher entity.
	// It exists in this package in order to avoid circular dependency with the "teacher" package.
	MasterTeachersInverseTable = "teachers"
	// MasterTeachersColumn is the table column denoting the master_teachers relation/edge.
	MasterTeachersColumn = "class_head_master_id"
	// ClassTeachersTable is the table the holds the class_teachers relation/edge.
	ClassTeachersTable = "kc_class_teachers"
	// ClassTeachersInverseTable is the table name for the KcClassTeacher entity.
	// It exists in this package in order to avoid circular dependency with the "kcclassteacher" package.
	ClassTeachersInverseTable = "kc_class_teachers"
	// ClassTeachersColumn is the table column denoting the class_teachers relation/edge.
	ClassTeachersColumn = "class_id"
	// KcClassCoursesTable is the table the holds the kc_class_courses relation/edge. The primary key declared below.
	KcClassCoursesTable = "kc_class_kc_class_courses"
	// KcClassCoursesInverseTable is the table name for the KcCourse entity.
	// It exists in this package in order to avoid circular dependency with the "kccourse" package.
	KcClassCoursesInverseTable = "kc_courses"
	// KcUserClassesTable is the table the holds the kc_user_classes relation/edge.
	KcUserClassesTable = "kc_user_classes"
	// KcUserClassesInverseTable is the table name for the KcUserClass entity.
	// It exists in this package in order to avoid circular dependency with the "kcuserclass" package.
	KcUserClassesInverseTable = "kc_user_classes"
	// KcUserClassesColumn is the table column denoting the kc_user_classes relation/edge.
	KcUserClassesColumn = "class_id"
	// MessageClassesTable is the table the holds the message_classes relation/edge.
	MessageClassesTable = "messages"
	// MessageClassesInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessageClassesInverseTable = "messages"
	// MessageClassesColumn is the table column denoting the message_classes relation/edge.
	MessageClassesColumn = "class_id"
)

// Columns holds all SQL columns for kcclass fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldClassTitle,
	FieldClassCode,
	FieldClassDesc,
	FieldIsDisplay,
	FieldIsBuy,
	FieldClassPeriodType,
	FieldClassStartDate,
	FieldClassEndDate,
	FieldClosingDate,
	FieldDaysValidity,
	FieldClassHeadMasterID,
	FieldClassCoverImgID,
	FieldStatus,
	FieldPrice,
	FieldStudentCount,
	FieldCourseCount,
	FieldCateID,
	FieldCityID,
	FieldCreatedAdminID,
}

var (
	// MajorsPrimaryKey and MajorsColumn2 are the table columns denoting the
	// primary key for the majors relation (M2M).
	MajorsPrimaryKey = []string{"major_id", "kc_class_id"}
	// KcClassCoursesPrimaryKey and KcClassCoursesColumn2 are the table columns denoting the
	// primary key for the kc_class_courses relation (M2M).
	KcClassCoursesPrimaryKey = []string{"kc_class_id", "kc_course_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultClassTitle holds the default value on creation for the "class_title" field.
	DefaultClassTitle string
	// DefaultClassCode holds the default value on creation for the "class_code" field.
	DefaultClassCode string
	// DefaultClassDesc holds the default value on creation for the "class_desc" field.
	DefaultClassDesc string
	// DefaultIsDisplay holds the default value on creation for the "is_display" field.
	DefaultIsDisplay uint8
	// DefaultIsBuy holds the default value on creation for the "is_buy" field.
	DefaultIsBuy uint8
	// DefaultClassPeriodType holds the default value on creation for the "class_period_type" field.
	DefaultClassPeriodType uint8
	// DefaultDaysValidity holds the default value on creation for the "days_validity" field.
	DefaultDaysValidity int
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus uint8
	// DefaultPrice holds the default value on creation for the "price" field.
	DefaultPrice float64
	// DefaultStudentCount holds the default value on creation for the "student_count" field.
	DefaultStudentCount int
	// DefaultCourseCount holds the default value on creation for the "course_count" field.
	DefaultCourseCount int
)
