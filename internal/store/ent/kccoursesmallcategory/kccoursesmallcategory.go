// Code generated by entc, DO NOT EDIT.

package kccoursesmallcategory

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the kccoursesmallcategory type in the database.
	Label = "kc_course_small_category"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldSmallName holds the string denoting the small_name field in the database.
	FieldSmallName = "small_name"
	// FieldViewingTime holds the string denoting the viewing_time field in the database.
	FieldViewingTime = "viewing_time"
	// FieldFinishType holds the string denoting the finish_type field in the database.
	FieldFinishType = "finish_type"
	// FieldTeachType holds the string denoting the teach_type field in the database.
	FieldTeachType = "teach_type"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldLiveSmallStart holds the string denoting the live_small_start field in the database.
	FieldLiveSmallStart = "live_small_start"
	// FieldLiveSmallStatus holds the string denoting the live_small_status field in the database.
	FieldLiveSmallStatus = "live_small_status"
	// FieldLiveRoomID holds the string denoting the live_room_id field in the database.
	FieldLiveRoomID = "live_room_id"
	// FieldBackVideoID holds the string denoting the back_video_id field in the database.
	FieldBackVideoID = "back_video_id"
	// FieldFalseVideoID holds the string denoting the false_video_id field in the database.
	FieldFalseVideoID = "false_video_id"
	// FieldOrderVideoID holds the string denoting the order_video_id field in the database.
	FieldOrderVideoID = "order_video_id"
	// FieldOrderVideoAttachID holds the string denoting the order_video_attach_id field in the database.
	FieldOrderVideoAttachID = "order_video_attach_id"
	// FieldLiveSmallTime holds the string denoting the live_small_time field in the database.
	FieldLiveSmallTime = "live_small_time"
	// FieldPushStatus holds the string denoting the push_status field in the database.
	FieldPushStatus = "push_status"
	// FieldLiveSmallRemark holds the string denoting the live_small_remark field in the database.
	FieldLiveSmallRemark = "live_small_remark"
	// FieldCoursewareAttachID holds the string denoting the courseware_attach_id field in the database.
	FieldCoursewareAttachID = "courseware_attach_id"
	// FieldCoursewareName holds the string denoting the courseware_name field in the database.
	FieldCoursewareName = "courseware_name"
	// FieldAttachmentCount holds the string denoting the attachment_count field in the database.
	FieldAttachmentCount = "attachment_count"
	// FieldQuestionCount holds the string denoting the question_count field in the database.
	FieldQuestionCount = "question_count"
	// FieldExamCount holds the string denoting the exam_count field in the database.
	FieldExamCount = "exam_count"
	// FieldHomeworkCount holds the string denoting the homework_count field in the database.
	FieldHomeworkCount = "homework_count"
	// FieldStudyCount holds the string denoting the study_count field in the database.
	FieldStudyCount = "study_count"
	// FieldFinishCount holds the string denoting the finish_count field in the database.
	FieldFinishCount = "finish_count"
	// FieldAverageViewDuration holds the string denoting the average_view_duration field in the database.
	FieldAverageViewDuration = "average_view_duration"
	// FieldCourseID holds the string denoting the course_id field in the database.
	FieldCourseID = "course_id"
	// FieldChapterID holds the string denoting the chapter_id field in the database.
	FieldChapterID = "chapter_id"
	// FieldSectionID holds the string denoting the section_id field in the database.
	FieldSectionID = "section_id"
	// EdgeCourse holds the string denoting the course edge name in mutations.
	EdgeCourse = "course"
	// EdgeChapter holds the string denoting the chapter edge name in mutations.
	EdgeChapter = "chapter"
	// EdgeSection holds the string denoting the section edge name in mutations.
	EdgeSection = "section"
	// EdgeCourseSmallCategoryAttachments holds the string denoting the course_small_category_attachments edge name in mutations.
	EdgeCourseSmallCategoryAttachments = "course_small_category_attachments"
	// EdgeCourseSmallCategoryExampapers holds the string denoting the course_small_category_exampapers edge name in mutations.
	EdgeCourseSmallCategoryExampapers = "course_small_category_exampapers"
	// EdgeCourseSmallCategoryQuestions holds the string denoting the course_small_category_questions edge name in mutations.
	EdgeCourseSmallCategoryQuestions = "course_small_category_questions"
	// EdgeCourseAppraiseSmalls holds the string denoting the course_appraise_smalls edge name in mutations.
	EdgeCourseAppraiseSmalls = "course_appraise_smalls"
	// EdgeVideoRecordSmall holds the string denoting the video_record_small edge name in mutations.
	EdgeVideoRecordSmall = "video_record_small"
	// EdgeCsAttachment holds the string denoting the cs_attachment edge name in mutations.
	EdgeCsAttachment = "cs_attachment"
	// EdgeOdAttachment holds the string denoting the od_attachment edge name in mutations.
	EdgeOdAttachment = "od_attachment"
	// Table holds the table name of the kccoursesmallcategory in the database.
	Table = "kc_course_small_categories"
	// CourseTable is the table the holds the course relation/edge.
	CourseTable = "kc_course_small_categories"
	// CourseInverseTable is the table name for the KcCourse entity.
	// It exists in this package in order to avoid circular dependency with the "kccourse" package.
	CourseInverseTable = "kc_courses"
	// CourseColumn is the table column denoting the course relation/edge.
	CourseColumn = "course_id"
	// ChapterTable is the table the holds the chapter relation/edge.
	ChapterTable = "kc_course_small_categories"
	// ChapterInverseTable is the table name for the KcCourseChapter entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursechapter" package.
	ChapterInverseTable = "kc_course_chapters"
	// ChapterColumn is the table column denoting the chapter relation/edge.
	ChapterColumn = "chapter_id"
	// SectionTable is the table the holds the section relation/edge.
	SectionTable = "kc_course_small_categories"
	// SectionInverseTable is the table name for the KcCourseSection entity.
	// It exists in this package in order to avoid circular dependency with the "kccoursesection" package.
	SectionInverseTable = "kc_course_sections"
	// SectionColumn is the table column denoting the section relation/edge.
	SectionColumn = "section_id"
	// CourseSmallCategoryAttachmentsTable is the table the holds the course_small_category_attachments relation/edge.
	CourseSmallCategoryAttachmentsTable = "kc_small_category_attachments"
	// CourseSmallCategoryAttachmentsInverseTable is the table name for the KcSmallCategoryAttachment entity.
	// It exists in this package in order to avoid circular dependency with the "kcsmallcategoryattachment" package.
	CourseSmallCategoryAttachmentsInverseTable = "kc_small_category_attachments"
	// CourseSmallCategoryAttachmentsColumn is the table column denoting the course_small_category_attachments relation/edge.
	CourseSmallCategoryAttachmentsColumn = "small_category_id"
	// CourseSmallCategoryExampapersTable is the table the holds the course_small_category_exampapers relation/edge.
	CourseSmallCategoryExampapersTable = "kc_small_category_exam_papers"
	// CourseSmallCategoryExampapersInverseTable is the table name for the KcSmallCategoryExamPaper entity.
	// It exists in this package in order to avoid circular dependency with the "kcsmallcategoryexampaper" package.
	CourseSmallCategoryExampapersInverseTable = "kc_small_category_exam_papers"
	// CourseSmallCategoryExampapersColumn is the table column denoting the course_small_category_exampapers relation/edge.
	CourseSmallCategoryExampapersColumn = "small_category_id"
	// CourseSmallCategoryQuestionsTable is the table the holds the course_small_category_questions relation/edge.
	CourseSmallCategoryQuestionsTable = "kc_small_category_questions"
	// CourseSmallCategoryQuestionsInverseTable is the table name for the KcSmallCategoryQuestion entity.
	// It exists in this package in order to avoid circular dependency with the "kcsmallcategoryquestion" package.
	CourseSmallCategoryQuestionsInverseTable = "kc_small_category_questions"
	// CourseSmallCategoryQuestionsColumn is the table column denoting the course_small_category_questions relation/edge.
	CourseSmallCategoryQuestionsColumn = "small_category_id"
	// CourseAppraiseSmallsTable is the table the holds the course_appraise_smalls relation/edge.
	CourseAppraiseSmallsTable = "user_course_appraises"
	// CourseAppraiseSmallsInverseTable is the table name for the UserCourseAppraise entity.
	// It exists in this package in order to avoid circular dependency with the "usercourseappraise" package.
	CourseAppraiseSmallsInverseTable = "user_course_appraises"
	// CourseAppraiseSmallsColumn is the table column denoting the course_appraise_smalls relation/edge.
	CourseAppraiseSmallsColumn = "small_cate_id"
	// VideoRecordSmallTable is the table the holds the video_record_small relation/edge.
	VideoRecordSmallTable = "video_records"
	// VideoRecordSmallInverseTable is the table name for the VideoRecord entity.
	// It exists in this package in order to avoid circular dependency with the "videorecord" package.
	VideoRecordSmallInverseTable = "video_records"
	// VideoRecordSmallColumn is the table column denoting the video_record_small relation/edge.
	VideoRecordSmallColumn = "small_id"
	// CsAttachmentTable is the table the holds the cs_attachment relation/edge.
	CsAttachmentTable = "kc_course_small_categories"
	// CsAttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	CsAttachmentInverseTable = "attachments"
	// CsAttachmentColumn is the table column denoting the cs_attachment relation/edge.
	CsAttachmentColumn = "courseware_attach_id"
	// OdAttachmentTable is the table the holds the od_attachment relation/edge.
	OdAttachmentTable = "kc_course_small_categories"
	// OdAttachmentInverseTable is the table name for the Attachment entity.
	// It exists in this package in order to avoid circular dependency with the "attachment" package.
	OdAttachmentInverseTable = "attachments"
	// OdAttachmentColumn is the table column denoting the od_attachment relation/edge.
	OdAttachmentColumn = "order_video_attach_id"
)

// Columns holds all SQL columns for kccoursesmallcategory fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldSmallName,
	FieldViewingTime,
	FieldFinishType,
	FieldTeachType,
	FieldType,
	FieldLiveSmallStart,
	FieldLiveSmallStatus,
	FieldLiveRoomID,
	FieldBackVideoID,
	FieldFalseVideoID,
	FieldOrderVideoID,
	FieldOrderVideoAttachID,
	FieldLiveSmallTime,
	FieldPushStatus,
	FieldLiveSmallRemark,
	FieldCoursewareAttachID,
	FieldCoursewareName,
	FieldAttachmentCount,
	FieldQuestionCount,
	FieldExamCount,
	FieldHomeworkCount,
	FieldStudyCount,
	FieldFinishCount,
	FieldAverageViewDuration,
	FieldCourseID,
	FieldChapterID,
	FieldSectionID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "gserver/internal/store/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultSmallName holds the default value on creation for the "small_name" field.
	DefaultSmallName string
	// DefaultViewingTime holds the default value on creation for the "viewing_time" field.
	DefaultViewingTime int
	// DefaultFinishType holds the default value on creation for the "finish_type" field.
	DefaultFinishType uint8
	// DefaultTeachType holds the default value on creation for the "teach_type" field.
	DefaultTeachType uint8
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType uint8
	// DefaultLiveSmallStatus holds the default value on creation for the "live_small_status" field.
	DefaultLiveSmallStatus int8
	// DefaultLiveSmallTime holds the default value on creation for the "live_small_time" field.
	DefaultLiveSmallTime int
	// DefaultPushStatus holds the default value on creation for the "push_status" field.
	DefaultPushStatus uint8
	// DefaultLiveSmallRemark holds the default value on creation for the "live_small_remark" field.
	DefaultLiveSmallRemark string
	// DefaultCoursewareName holds the default value on creation for the "courseware_name" field.
	DefaultCoursewareName string
	// DefaultAttachmentCount holds the default value on creation for the "attachment_count" field.
	DefaultAttachmentCount int
	// DefaultQuestionCount holds the default value on creation for the "question_count" field.
	DefaultQuestionCount int
	// DefaultExamCount holds the default value on creation for the "exam_count" field.
	DefaultExamCount int
	// DefaultHomeworkCount holds the default value on creation for the "homework_count" field.
	DefaultHomeworkCount int
	// DefaultStudyCount holds the default value on creation for the "study_count" field.
	DefaultStudyCount int
	// DefaultFinishCount holds the default value on creation for the "finish_count" field.
	DefaultFinishCount int
	// DefaultAverageViewDuration holds the default value on creation for the "average_view_duration" field.
	DefaultAverageViewDuration int
)
