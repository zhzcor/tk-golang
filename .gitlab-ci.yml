# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $PWD/bin
  - go mod tidy 

stages:
    - test
    - build
    - deploy

format:
    stage: test
    script:
      - go fmt $(go list ./... | grep -v /vendor/)
      - go generate ./...
      #- go test -race $(go list ./... | grep -v /vendor/)

compile:
    stage: build
    script:
      - go build -race  -o $PWD/bin
    artifacts:
      paths:
        - bin/
deploy:
    stage: deploy
    only:
    - devloop
    script:
      - ssh root@10.16.0.23 "ps -ef|grep gserver | grep -v grep | awk '{print \$2}'| xargs kill -9 " || true
      - scp  $PWD/bin/gserver  root@10.16.0.23:~/gserver/bin/
      - ssh root@10.16.0.23 "nohup ~/gserver/bin/gserver server -l :8088 >/dev/null 2>&1 &"
deploy_prerelease:
    stage: deploy
    only:
    - master
    script:
      - ssh root@182.151.10.143 "ps -ef|grep gserver | grep -v grep | awk '{print \$2}'| xargs kill -9 " || true
      - scp  $PWD/bin/gserver  root@182.151.10.143:~/gserver/bin/
      - ssh root@182.151.10.143 "nohup ~/gserver/bin/gserver server -l :8088 >/www/wwwlogs/gserver.log 2>&1 &"
deploy_release:
    stage: deploy
    only:
    - release
    script:
      - ssh root@47.106.188.165 "supervisorctl stop gserver"
      - scp  $PWD/bin/gserver  root@47.106.188.165/xueyuan-api.sensmind.com/:~/gserver/bin/
      - ssh root@47.106.188.165 "supervisorctl start gserver"
